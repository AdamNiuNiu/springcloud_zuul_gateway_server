2020-07-08 11:25:21.075|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 11:25:22.617|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 11:25:22.642|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 11:25:23.007|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=abc8b0d5-50d1-35b9-8962-c5cdb15d0673
2020-07-08 11:25:24.151|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 11:25:24.184|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 11:25:24.184|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 11:25:24.185|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 11:25:24.441|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 11:25:24.441|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3335 ms
2020-07-08 11:25:24.595|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 11:25:24.596|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 11:25:24.623|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16ac4d3d
2020-07-08 11:25:27.869|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 11:25:27.953|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 11:25:27.976|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 11:25:27.976|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 11:25:28.123|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 11:25:28.507|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 11:25:29.795|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-08 11:25:29.989|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 11:25:30.095|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 11:25:30.216|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 11:25:30.217|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 11:25:30.477|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 11:25:30.477|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 11:25:30.876|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 11:25:31.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 11:25:31.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 11:25:31.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 11:25:31.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 11:25:31.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 11:25:31.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 11:25:31.571|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 11:25:31.754|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 11:25:31.757|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 11:25:31.760|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 11:25:31.766|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594178731765 with initial instances count: 1
2020-07-08 11:25:31.768|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-08 11:25:31.769|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594178731769, current=UP, previous=STARTING]
2020-07-08 11:25:31.774|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 11:25:31.777|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-08 11:25:31.846|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 11:25:31.854|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-08 11:25:31.855|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-08 11:25:33.005|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 11:25:33.032|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 11:25:33.104|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 11:25:33.153|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 16.15 seconds (JVM running for 22.916)
2020-07-08 11:25:35.269|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 11:25:35.270|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 11:25:35.284|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 14 ms
2020-07-08 11:26:59.056|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 11:26:59.078|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 11:26:59.079|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 11:26:59.089|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 11:26:59.147|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 11:26:59.150|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5264b100
2020-07-08 11:27:00.105|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 11:28:33.231|WARN |http-nio-8080-exec-6|http-nio-8080-exec-6|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: eureka-provider-demo-my
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302) ~[hystrix-core-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298) ~[hystrix-core-1.5.18.jar:1.5.18]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378) ~[hystrix-core-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344) ~[hystrix-core-1.5.18.jar:1.5.18]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	... 55 more
2020-07-08 11:28:40.523|WARN |http-nio-8080-exec-8|http-nio-8080-exec-8|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: eureka-provider-demo-my
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302) ~[hystrix-core-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298) ~[hystrix-core-1.5.18.jar:1.5.18]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378) ~[hystrix-core-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344) ~[hystrix-core-1.5.18.jar:1.5.18]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	... 55 more
2020-07-08 11:28:51.735|WARN |http-nio-8080-exec-7|http-nio-8080-exec-7|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: eureka-provider-demo-my
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302) ~[hystrix-core-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298) ~[hystrix-core-1.5.18.jar:1.5.18]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378) ~[hystrix-core-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344) ~[hystrix-core-1.5.18.jar:1.5.18]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	... 55 more
2020-07-08 11:30:31.574|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:07:28.369|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:12:28.371|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:13:36.917|INFO |Thread-429|Thread-429|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 12:13:36.917|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-08 12:13:36.917|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594181616917, current=DOWN, previous=UP]
2020-07-08 12:13:36.918|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 12:13:36.923|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 12:13:37.617|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-08 12:13:37.622|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 12:13:37.622|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 12:13:37.630|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 12:13:37.646|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 12:13:40.650|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 12:13:40.655|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-08 12:13:40.665|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 12:14:10.784|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 12:14:12.846|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 12:14:12.872|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 12:14:13.114|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=abc8b0d5-50d1-35b9-8962-c5cdb15d0673
2020-07-08 12:14:14.054|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 12:14:14.085|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 12:14:14.085|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 12:14:14.086|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 12:14:14.318|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 12:14:14.319|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3471 ms
2020-07-08 12:14:14.472|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 12:14:14.474|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 12:14:14.491|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@25218a4d
2020-07-08 12:14:18.359|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 12:14:18.466|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 12:14:18.497|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 12:14:18.497|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 12:14:18.706|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 12:14:19.227|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 12:14:20.460|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-08 12:14:20.708|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 12:14:20.763|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 12:14:20.837|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 12:14:20.838|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 12:14:21.061|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 12:14:21.061|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 12:14:21.378|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:14:22.253|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 12:14:22.253|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 12:14:22.253|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 12:14:22.254|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 12:14:22.254|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 12:14:22.254|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 12:14:22.255|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 12:14:22.521|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 12:14:22.526|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 12:14:22.532|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 12:14:22.540|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594181662538 with initial instances count: 1
2020-07-08 12:14:22.544|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-08 12:14:22.545|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594181662544, current=UP, previous=STARTING]
2020-07-08 12:14:22.548|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 12:14:22.551|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-08 12:14:22.604|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-08 12:14:22.608|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 12:14:22.609|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-08 12:14:23.831|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 12:14:23.862|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 12:14:23.925|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 12:14:23.963|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 17.044 seconds (JVM running for 20.921)
2020-07-08 12:14:24.258|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 12:14:24.260|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 12:14:24.272|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 12 ms
2020-07-08 12:19:22.262|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:20:11.456|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-08 12:20:11.456|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594182011456, current=DOWN, previous=UP]
2020-07-08 12:20:11.457|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 12:20:11.464|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 12:20:12.192|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-08 12:20:12.196|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 12:20:12.211|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 12:20:15.213|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 12:20:15.218|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-08 12:20:15.230|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 12:20:34.237|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 12:20:35.783|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 12:20:35.804|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 12:20:36.050|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=abc8b0d5-50d1-35b9-8962-c5cdb15d0673
2020-07-08 12:20:36.894|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 12:20:36.926|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 12:20:36.927|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 12:20:36.927|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 12:20:37.173|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 12:20:37.173|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2905 ms
2020-07-08 12:20:37.339|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 12:20:37.340|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 12:20:37.355|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@71dd4624
2020-07-08 12:20:40.542|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 12:20:40.636|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 12:20:40.668|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 12:20:40.668|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 12:20:40.820|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 12:20:41.178|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 12:20:42.260|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-08 12:20:42.364|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 12:20:42.436|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 12:20:42.531|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 12:20:42.531|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 12:20:42.735|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 12:20:42.735|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 12:20:43.096|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:20:43.933|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 12:20:43.933|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 12:20:43.933|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 12:20:43.933|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 12:20:43.934|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 12:20:43.934|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 12:20:43.934|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 12:20:44.143|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 12:20:44.146|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 12:20:44.150|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 12:20:44.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594182044154 with initial instances count: 1
2020-07-08 12:20:44.157|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-08 12:20:44.158|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594182044158, current=UP, previous=STARTING]
2020-07-08 12:20:44.162|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 12:20:44.165|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-08 12:20:44.207|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-08 12:20:44.209|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-08 12:20:44.211|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 12:20:45.255|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 12:20:45.273|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 12:20:45.323|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 12:20:45.360|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 15.345 seconds (JVM running for 19.022)
2020-07-08 12:20:46.956|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 12:20:46.956|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 12:20:46.966|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 10 ms
2020-07-08 12:22:35.561|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 12:22:35.575|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 12:22:35.576|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 12:22:35.585|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 12:22:35.618|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 12:22:35.621|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6e681056
2020-07-08 12:22:36.589|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 12:25:43.938|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:30:43.939|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:35:43.940|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 12:36:39.489|INFO |Thread-427|Thread-427|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 12:36:39.490|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-08 12:36:39.493|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594182999490, current=DOWN, previous=UP]
2020-07-08 12:36:39.494|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 12:36:39.499|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 12:36:40.245|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-08 12:36:40.248|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 12:36:40.248|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 12:36:40.256|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 12:36:40.269|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 12:36:43.271|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 12:36:43.276|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-08 12:36:43.290|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 13:00:07.604|ERROR|main|main|org.springframework.boot.SpringApplication.reportFailure() 837|Application run failed
java.lang.IllegalStateException: Failed to load property source from 'file:/E:/tool/idea/workdir/gateway_server/target/classes/application.yml' (classpath:/application.yml)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:554) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:499) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:469) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$7(ConfigFileApplicationListener.java:448) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.lang.Iterable.forEach(Iterable.java:75) ~[?:1.8.0_211]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$8(ConfigFileApplicationListener.java:448) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.lang.Iterable.forEach(Iterable.java:75) ~[?:1.8.0_211]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:445) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$0(ConfigFileApplicationListener.java:348) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.FilteredPropertySource.apply(FilteredPropertySource.java:54) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:336) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:226) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:210) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:200) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:188) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:80) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:345) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at com.adam.gateway_server.GatewayServerApplication.main(GatewayServerApplication.java:15) ~[classes/:?]
Caused by: org.yaml.snakeyaml.parser.ParserException: while parsing a block mapping
 in 'reader', line 15, column 5:
        eureka-provider-demo-my: /provid ... 
        ^
expected <block end>, but found '<block mapping start>'
 in 'reader', line 18, column 7:
          strip-prefix: false #true：代理转发时去 ... 
          ^

	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:572) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:235) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:162) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:257) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:248) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:236) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:162) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:257) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:248) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:236) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:162) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:95) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:134) ~[snakeyaml-1.26.jar:?]
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:494) ~[snakeyaml-1.26.jar:?]
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:160) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:608) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:524) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	... 25 more
2020-07-08 13:05:11.681|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 13:05:13.291|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 13:05:13.310|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 13:05:13.540|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=abc8b0d5-50d1-35b9-8962-c5cdb15d0673
2020-07-08 13:05:14.687|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 13:05:14.738|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 13:05:14.739|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 13:05:14.739|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 13:05:15.017|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 13:05:15.017|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3309 ms
2020-07-08 13:05:15.335|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 13:05:15.340|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 13:05:15.386|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5b7308aa
2020-07-08 13:05:19.582|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 13:05:19.923|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 13:05:20.002|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 13:05:20.002|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 13:05:20.338|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 13:05:21.142|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 13:05:22.699|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-08 13:05:22.833|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 13:05:22.890|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 13:05:22.988|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 13:05:22.988|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 13:05:23.299|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 13:05:23.299|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 13:05:23.688|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 13:05:24.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 13:05:24.570|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 13:05:24.571|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 13:05:24.571|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 13:05:24.571|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 13:05:24.571|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 13:05:24.572|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 13:05:24.828|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 13:05:24.834|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 13:05:24.841|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 13:05:24.847|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594184724845 with initial instances count: 1
2020-07-08 13:05:24.850|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-08 13:05:24.851|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594184724851, current=UP, previous=STARTING]
2020-07-08 13:05:24.856|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 13:05:24.859|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-08 13:05:24.980|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-08 13:05:24.980|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 13:05:24.981|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-08 13:05:26.592|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 13:05:26.625|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 13:05:26.728|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 13:05:26.794|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 19.341 seconds (JVM running for 23.196)
2020-07-08 13:05:27.263|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 13:05:27.263|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 13:05:27.281|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 18 ms
2020-07-08 13:07:03.818|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 13:07:03.851|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 13:07:03.852|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 13:07:03.865|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 13:07:03.910|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 13:07:03.914|INFO |http-nio-8080-exec-2|http-nio-8080-exec-2|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4bf170f7
2020-07-08 13:07:04.870|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 13:10:24.576|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 13:15:24.578|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 13:15:25.798|INFO |Thread-429|Thread-429|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 13:15:25.799|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-08 13:15:25.799|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594185325799, current=DOWN, previous=UP]
2020-07-08 13:15:25.799|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 13:15:25.804|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 13:15:26.665|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-08 13:15:26.669|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 13:15:26.670|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 13:15:26.680|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 13:15:26.711|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 13:15:29.714|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 13:15:29.720|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-08 13:15:29.739|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 13:15:59.567|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 13:16:01.406|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 13:16:01.442|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 13:16:01.742|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=abc8b0d5-50d1-35b9-8962-c5cdb15d0673
2020-07-08 13:16:02.860|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 13:16:02.895|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 13:16:02.896|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 13:16:02.896|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 13:16:03.124|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 13:16:03.124|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3529 ms
2020-07-08 13:16:03.266|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 13:16:03.267|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 13:16:03.281|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@64dfb31d
2020-07-08 13:16:06.462|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 13:16:06.588|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 13:16:06.634|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 13:16:06.634|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 13:16:06.898|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 13:16:07.329|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 13:16:08.535|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-08 13:16:08.634|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 13:16:08.684|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 13:16:08.768|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 13:16:08.768|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 13:16:08.984|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 13:16:08.984|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 13:16:09.279|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 13:16:10.065|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 13:16:10.065|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 13:16:10.065|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 13:16:10.065|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 13:16:10.065|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 13:16:10.065|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 13:16:10.066|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 13:16:10.285|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 13:16:10.289|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 13:16:10.294|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 13:16:10.300|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594185370298 with initial instances count: 1
2020-07-08 13:16:10.303|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-08 13:16:10.304|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594185370303, current=UP, previous=STARTING]
2020-07-08 13:16:10.308|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 13:16:10.311|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-08 13:16:10.369|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 13:16:10.379|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-08 13:16:10.381|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-08 13:16:11.542|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 13:16:11.564|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 13:16:11.631|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 13:16:11.676|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 16.811 seconds (JVM running for 20.656)
2020-07-08 13:16:13.684|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 13:16:13.685|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 13:16:13.701|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-08 13:16:26.995|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 13:16:27.016|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 13:16:27.018|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 13:16:27.032|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 13:16:27.098|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 13:16:27.101|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@79842f90
2020-07-08 13:16:28.041|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 13:21:10.075|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:13:58.149|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:18:58.151|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:23:58.152|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:28:58.153|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:33:58.154|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:38:58.156|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:43:58.158|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:48:58.158|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 14:53:03.806|INFO |Thread-429|Thread-429|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 14:53:03.807|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-08 14:53:03.807|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594191183807, current=DOWN, previous=UP]
2020-07-08 14:53:03.808|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 14:53:03.813|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 14:53:04.665|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-08 14:53:04.668|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 14:53:04.668|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 14:53:04.677|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 14:53:04.693|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 14:53:07.708|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 14:53:07.716|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-08 14:53:07.733|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 15:07:26.499|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 15:07:28.889|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 15:07:28.915|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 15:07:29.186|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=8ae546af-b6dd-3efd-811e-bb53904c8a28
2020-07-08 15:07:31.056|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 15:07:31.091|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 15:07:31.095|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 15:07:31.096|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 15:07:31.382|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 15:07:31.382|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4824 ms
2020-07-08 15:07:31.574|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 15:07:31.575|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 15:07:31.593|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f8c3646
2020-07-08 15:07:35.160|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 15:07:35.270|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 15:07:35.301|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 15:07:35.302|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 15:07:35.645|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 15:07:36.239|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 15:07:37.663|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-08 15:07:37.838|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 15:07:37.922|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 15:07:38.011|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 15:07:38.011|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 15:07:38.206|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 15:07:38.206|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 15:07:38.508|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:07:39.321|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 15:07:39.321|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 15:07:39.321|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 15:07:39.321|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 15:07:39.322|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 15:07:39.322|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 15:07:39.322|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 15:07:39.584|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 15:07:39.586|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 15:07:39.590|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 15:07:39.595|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594192059594 with initial instances count: 1
2020-07-08 15:07:39.597|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-08 15:07:39.598|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594192059598, current=UP, previous=STARTING]
2020-07-08 15:07:39.602|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 15:07:39.604|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-08 15:07:39.649|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-08 15:07:39.652|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-08 15:07:39.657|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 15:07:40.783|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 15:07:40.816|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 15:07:40.955|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 15:07:41.025|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 19.549 seconds (JVM running for 23.32)
2020-07-08 15:07:44.234|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 15:07:44.234|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 15:07:44.253|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 18 ms
2020-07-08 15:08:32.780|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 15:08:32.798|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 15:08:32.799|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 15:08:32.806|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 15:08:32.850|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 15:08:32.852|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7d28088a
2020-07-08 15:08:33.810|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 15:12:39.327|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:17:39.329|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:22:39.329|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:27:39.332|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:32:39.333|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:37:39.334|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:42:39.335|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:47:39.337|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:52:39.338|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 15:57:39.339|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 16:02:39.340|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 16:06:08.749|INFO |Thread-430|Thread-430|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 16:06:08.751|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-08 16:06:08.751|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594195568751, current=DOWN, previous=UP]
2020-07-08 16:06:08.751|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 16:06:08.759|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 16:06:09.652|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-08 16:06:09.655|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 16:06:09.656|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 16:06:09.668|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:06:09.685|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 16:06:12.688|WARN |DiscoveryClient-1|DiscoveryClient-1|com.netflix.discovery.TimedSupervisorTask.run() 90|task supervisor shutting down, can't accept the task
2020-07-08 16:06:12.688|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 16:06:12.696|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-08 16:06:12.712|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 16:40:45.406|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:40:47.199|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:40:47.219|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:40:47.451|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=d3342b25-00d1-33ae-a879-180dcccfa0b2
2020-07-08 16:40:48.398|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:40:48.425|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:40:48.425|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:40:48.426|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:40:48.651|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:40:48.651|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3207 ms
2020-07-08 16:40:48.823|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:40:48.824|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:40:48.846|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5103eea2
2020-07-08 16:40:52.140|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:40:52.229|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:40:52.260|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:40:52.261|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:40:52.427|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:40:52.872|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimitUtils' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration$RateLimitUtilsConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimitUtils' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'zuul.ratelimit-com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties': Could not bind properties to 'RateLimitProperties' : prefix=zuul.ratelimit, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties
2020-07-08 16:40:52.874|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:40:52.893|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:40:52.898|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:40:52.914|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:40:52.919|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties failed:

    Property: zuul.ratelimit.repository
    Value: null
    Reason: 不能为null


Action:

Update your application's configuration

2020-07-08 16:46:20.362|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:46:22.051|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:46:22.074|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:46:22.369|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=d3342b25-00d1-33ae-a879-180dcccfa0b2
2020-07-08 16:46:23.453|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:46:23.481|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:46:23.481|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:46:23.482|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:46:23.706|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:46:23.706|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3314 ms
2020-07-08 16:46:23.844|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:46:23.846|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:46:23.862|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2ef041bb
2020-07-08 16:46:27.219|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:46:27.333|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:46:27.367|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:46:27.368|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:46:27.596|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:46:28.116|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimitUtils' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration$RateLimitUtilsConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimitUtils' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'zuul.ratelimit-com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties': Could not bind properties to 'RateLimitProperties' : prefix=zuul.ratelimit, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties
2020-07-08 16:46:28.117|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:46:28.141|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:46:28.148|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:46:28.168|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:46:28.173|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties failed:

    Property: zuul.ratelimit.repository
    Value: null
    Reason: 不能为null


Action:

Update your application's configuration

2020-07-08 16:47:52.363|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:47:54.227|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:47:54.258|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:47:54.630|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=d3342b25-00d1-33ae-a879-180dcccfa0b2
2020-07-08 16:47:55.655|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:47:55.681|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:47:55.681|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:47:55.681|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:47:55.888|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:47:55.888|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3493 ms
2020-07-08 16:47:56.046|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:47:56.047|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:47:56.062|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@76a1146d
2020-07-08 16:47:59.581|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:47:59.679|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:47:59.711|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:47:59.711|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:47:59.912|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:48:00.419|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimitUtils' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration$RateLimitUtilsConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimitUtils' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'zuul.ratelimit-com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties': Could not bind properties to 'RateLimitProperties' : prefix=zuul.ratelimit, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties
2020-07-08 16:48:00.420|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:48:00.440|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:48:00.446|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:48:00.465|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:48:00.471|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties failed:

    Property: zuul.ratelimit.repository
    Value: null
    Reason: 不能为null


Action:

Update your application's configuration

2020-07-08 16:48:31.094|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:48:32.769|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:48:32.789|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:48:33.021|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=d3342b25-00d1-33ae-a879-180dcccfa0b2
2020-07-08 16:48:33.957|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:48:33.984|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:48:33.984|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:48:33.985|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:48:34.184|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:48:34.185|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3058 ms
2020-07-08 16:48:34.328|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:48:34.329|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:48:34.343|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2bdb5e0f
2020-07-08 16:48:37.658|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:48:37.755|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:48:37.795|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:48:37.795|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:48:37.962|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:48:38.399|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimitUtils' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration$RateLimitUtilsConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimitUtils' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'zuul.ratelimit-com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties': Could not bind properties to 'RateLimitProperties' : prefix=zuul.ratelimit, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties
2020-07-08 16:48:38.400|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:48:38.417|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:48:38.424|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:48:38.440|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:48:38.445|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties failed:

    Property: zuul.ratelimit.repository
    Value: null
    Reason: 不能为null


Action:

Update your application's configuration

2020-07-08 16:52:42.415|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:52:44.118|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:52:44.141|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:52:44.440|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=d3342b25-00d1-33ae-a879-180dcccfa0b2
2020-07-08 16:52:45.538|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:52:45.565|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:52:45.565|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:52:45.566|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:52:45.763|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:52:45.764|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3316 ms
2020-07-08 16:52:45.923|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:52:45.923|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:52:45.937|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@39ace1a7
2020-07-08 16:52:49.078|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:52:49.195|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:52:49.233|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:52:49.233|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:52:49.413|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:52:49.935|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimiterPreFilter' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimiterPreFilter' parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.RateLimiter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2020-07-08 16:52:49.937|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:52:49.967|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:52:49.973|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:52:49.998|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:52:50.383|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of method rateLimiterPreFilter in com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.RateLimitAutoConfiguration required a bean of type 'com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.RateLimiter' that could not be found.

The following candidates were found but could not be injected:
	- Bean method 'bucket4jHazelcastRateLimiter' in 'RateLimitAutoConfiguration.Bucket4jHazelcastConfiguration' not loaded because @ConditionalOnClass did not find required classes 'io.github.bucket4j.grid.hazelcast.Hazelcast', 'com.hazelcast.map.IMap'
	- Bean method 'bucket4jIgniteRateLimiter' in 'RateLimitAutoConfiguration.Bucket4jIgniteConfiguration' not loaded because @ConditionalOnClass did not find required classes 'io.github.bucket4j.grid.ignite.Ignite', 'org.apache.ignite.IgniteCache'
	- Bean method 'bucket4jInfinispanRateLimiter' in 'RateLimitAutoConfiguration.Bucket4jInfinispanConfiguration' not loaded because @ConditionalOnClass did not find required classes 'io.github.bucket4j.grid.infinispan.Infinispan', 'org.infinispan.functional.FunctionalMap$ReadWriteMap'
	- Bean method 'jCache4jHazelcastRateLimiter' in 'RateLimitAutoConfiguration.Bucket4jJCacheConfiguration' not loaded because @ConditionalOnClass did not find required classes 'io.github.bucket4j.grid.jcache.JCache', 'javax.cache.Cache'
	- Bean method 'consultRateLimiter' in 'RateLimitAutoConfiguration.ConsulConfiguration' not loaded because @ConditionalOnProperty (zuul.ratelimit.repository=CONSUL) found different value in property 'repository'
	- Bean method 'redisRateLimiter' in 'RateLimitAutoConfiguration.RedisConfiguration' not loaded because @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.StringRedisTemplate'
	- Bean method 'springDataRateLimiter' in 'RateLimitAutoConfiguration.SpringDataConfiguration' not loaded because @ConditionalOnProperty (zuul.ratelimit.repository=JPA) found different value in property 'repository'


Action:

Consider revisiting the entries above or defining a bean of type 'com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.RateLimiter' in your configuration.

2020-07-08 16:53:29.183|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:53:31.538|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:53:31.575|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:53:31.934|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=d3342b25-00d1-33ae-a879-180dcccfa0b2
2020-07-08 16:53:32.913|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:53:32.941|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:53:32.941|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:53:32.941|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:53:33.158|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:53:33.158|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3941 ms
2020-07-08 16:53:33.308|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:53:33.309|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:53:33.324|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@69e2fe3b
2020-07-08 16:53:36.804|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:53:36.950|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:53:37.019|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:53:37.019|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:53:37.199|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:53:37.851|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimitUtils' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration$RateLimitUtilsConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimitUtils' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'zuul.ratelimit-com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties': Could not bind properties to 'RateLimitProperties' : prefix=zuul.ratelimit, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties
2020-07-08 16:53:37.854|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:53:37.903|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:53:37.911|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:53:37.939|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:53:37.945|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties failed:

    Property: zuul.ratelimit.repository
    Value: null
    Reason: 不能为null


Action:

Update your application's configuration

2020-07-08 16:55:02.581|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:55:04.041|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:55:04.060|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:55:04.280|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=2311c873-5d61-36da-984f-fd3904b54e03
2020-07-08 16:55:05.121|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:55:05.153|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:55:05.154|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:55:05.154|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:55:05.354|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:55:05.355|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2746 ms
2020-07-08 16:55:05.486|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:55:05.487|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:55:05.504|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4afd65fd
2020-07-08 16:55:08.447|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:55:08.539|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:55:08.567|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:55:08.567|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:55:08.714|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:55:08.875|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimiterPreFilter' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimiterPreFilter' parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.RateLimiter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2020-07-08 16:55:08.876|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:55:08.898|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:55:08.906|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:55:08.932|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:55:09.214|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of method rateLimiterPreFilter in com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.RateLimitAutoConfiguration required a bean of type 'com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.RateLimiter' that could not be found.

The following candidates were found but could not be injected:
	- Bean method 'consultRateLimiter' in 'RateLimitAutoConfiguration.ConsulConfiguration' not loaded because @ConditionalOnProperty (zuul.ratelimit.repository=CONSUL) found different value in property 'repository'
	- Bean method 'inMemoryRateLimiter' in 'RateLimitAutoConfiguration.InMemoryConfiguration' not loaded because @ConditionalOnProperty (zuul.ratelimit.repository=IN_MEMORY) found different value in property 'repository'
	- Bean method 'redisRateLimiter' in 'RateLimitAutoConfiguration.RedisConfiguration' not loaded because @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisTemplate'
	- Bean method 'springDataRateLimiter' in 'RateLimitAutoConfiguration.SpringDataConfiguration' not loaded because @ConditionalOnProperty (zuul.ratelimit.repository=JPA) found different value in property 'repository'


Action:

Consider revisiting the entries above or defining a bean of type 'com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.RateLimiter' in your configuration.

2020-07-08 16:55:39.697|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 16:55:41.256|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 16:55:41.277|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 16:55:41.541|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=2338586c-dc01-3ac3-a45e-2b40c686e328
2020-07-08 16:55:42.479|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 16:55:42.511|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 16:55:42.511|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 16:55:42.512|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 16:55:42.736|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 16:55:42.736|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3007 ms
2020-07-08 16:55:42.898|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:55:42.898|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:55:42.916|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@54be6213
2020-07-08 16:55:46.116|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 16:55:46.207|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 16:55:46.238|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 16:55:46.238|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 16:55:46.422|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 16:55:46.657|WARN |main|main|org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.refresh() 558|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rateLimiterPreFilter' defined in class path resource [com/marcosbarbero/cloud/autoconfigure/zuul/ratelimit/RateLimitAutoConfiguration.class]: Unsatisfied dependency expressed through method 'rateLimiterPreFilter' parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'zuul.ratelimit-com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties': Could not bind properties to 'RateLimitProperties' : prefix=zuul.ratelimit, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'zuul.ratelimit.policies.type' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties$Policy
2020-07-08 16:55:46.658|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 16:55:46.676|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Stopping service [Tomcat]
2020-07-08 16:55:46.681|WARN |main|main|org.apache.catalina.loader.WebappClassLoaderBase.log() 173|The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-08 16:55:46.700|INFO |main|main|org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage() 136|

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-08 16:55:46.707|ERROR|main|main|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report() 40|

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'zuul.ratelimit.policies.type' to com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties$Policy:

    Reason: No converter found capable of converting from type [java.lang.String] to type [com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.config.properties.RateLimitProperties$Policy]

Action:

Update your application's configuration

2020-07-08 19:40:04.328|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 19:40:05.940|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 19:40:05.963|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 19:40:06.222|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=2338586c-dc01-3ac3-a45e-2b40c686e328
2020-07-08 19:40:07.273|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-08 19:40:07.310|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-08 19:40:07.311|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 19:40:07.311|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 19:40:07.596|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 19:40:07.596|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3239 ms
2020-07-08 19:40:07.807|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 19:40:07.809|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 19:40:07.824|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@c262f2f
2020-07-08 19:40:11.340|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 19:40:11.434|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 19:40:11.466|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 19:40:11.467|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 19:40:11.663|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 19:40:12.243|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 19:40:13.322|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-08 19:40:13.420|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 19:40:13.472|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 19:40:13.552|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 19:40:13.552|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 19:40:13.730|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 19:40:13.730|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 19:40:14.037|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 19:40:14.764|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 19:40:14.764|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 19:40:14.764|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 19:40:14.765|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 19:40:14.765|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 19:40:14.765|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 19:40:14.765|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 19:40:15.007|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 19:40:15.011|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 19:40:15.018|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 19:40:15.024|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594208415022 with initial instances count: 1
2020-07-08 19:40:15.027|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-08 19:40:15.029|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594208415028, current=UP, previous=STARTING]
2020-07-08 19:40:15.034|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-08 19:40:15.036|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-08 19:40:15.090|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-08 19:40:15.093|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-08 19:40:15.252|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-08 19:40:16.291|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 19:40:16.317|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 19:40:16.366|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 19:40:16.411|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 15.892 seconds (JVM running for 19.877)
2020-07-08 19:40:17.681|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 19:40:17.681|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 19:40:17.695|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 13 ms
2020-07-08 19:40:52.026|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 19:40:52.041|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 19:40:52.042|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 19:40:52.049|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 19:40:52.082|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 19:40:52.084|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@64f7d271
2020-07-08 19:40:53.054|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 19:41:04.058|WARN |http-nio-8080-exec-5|http-nio-8080-exec-5|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: 429 TOO_MANY_REQUESTS
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.lambda$run$0(RateLimitPreFilter.java:104) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at java.util.Optional.ifPresent(Optional.java:159) ~[?:1.8.0_211]
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.run(RateLimitPreFilter.java:76) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.preRoute(FilterProcessor.java:133) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.preRoute(ZuulRunner.java:105) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.preRoute(ZuulServlet.java:125) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:74) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-08 19:45:14.771|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 19:50:14.773|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 19:55:14.775|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 20:00:14.777|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 20:05:14.778|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 20:10:14.778|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 20:15:14.780|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 20:20:14.782|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 08:45:59.002|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 08:50:59.005|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:21:07.736|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:26:07.738|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:31:07.740|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:36:07.741|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:41:07.744|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:46:07.745|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:51:07.747|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 09:56:07.749|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 10:01:07.750|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 10:02:12.519|WARN |http-nio-8080-exec-1|http-nio-8080-exec-1|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: 429 TOO_MANY_REQUESTS
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.lambda$run$0(RateLimitPreFilter.java:104) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at java.util.Optional.ifPresent(Optional.java:159) ~[?:1.8.0_211]
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.run(RateLimitPreFilter.java:76) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.preRoute(FilterProcessor.java:133) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.preRoute(ZuulRunner.java:105) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.preRoute(ZuulServlet.java:125) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:74) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-09 10:02:39.494|INFO |Thread-437|Thread-437|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-09 10:02:39.519|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-09 10:02:39.522|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594260159519, current=DOWN, previous=UP]
2020-07-09 10:02:39.523|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-09 10:02:39.580|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-09 10:02:40.447|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-09 10:02:40.458|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-09 10:02:40.459|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-09 10:02:40.484|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-09 10:02:40.528|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-09 10:02:43.531|WARN |DiscoveryClient-1|DiscoveryClient-1|com.netflix.discovery.TimedSupervisorTask.run() 90|task supervisor shutting down, can't accept the task
2020-07-09 10:02:43.534|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-09 10:02:43.544|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-09 10:02:43.580|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-09 19:54:35.492|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-09 19:54:38.954|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-09 19:54:38.987|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-09 19:54:39.384|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=2338586c-dc01-3ac3-a45e-2b40c686e328
2020-07-09 19:54:41.194|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-09 19:54:41.257|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-09 19:54:41.258|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-09 19:54:41.259|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-09 19:54:41.872|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-09 19:54:41.873|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 6326 ms
2020-07-09 19:54:42.210|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-09 19:54:42.212|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-09 19:54:42.243|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@349f0ca4
2020-07-09 19:54:47.481|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-09 19:54:47.676|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-09 19:54:47.768|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-09 19:54:47.768|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-09 19:54:48.053|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-09 19:54:49.045|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-09 19:54:50.832|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-09 19:54:50.972|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-09 19:54:51.038|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-09 19:54:51.145|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-09 19:54:51.145|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-09 19:54:51.455|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-09 19:54:51.456|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-09 19:54:52.103|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 19:54:53.283|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-09 19:54:53.284|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-09 19:54:53.284|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-09 19:54:53.285|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-09 19:54:53.285|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-09 19:54:53.286|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-09 19:54:53.286|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-09 19:54:53.738|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-09 19:54:53.743|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-09 19:54:53.749|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-09 19:54:53.759|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594295693756 with initial instances count: 1
2020-07-09 19:54:53.765|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-09 19:54:53.766|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594295693766, current=UP, previous=STARTING]
2020-07-09 19:54:53.771|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-09 19:54:53.776|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-09 19:54:53.835|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-09 19:54:53.836|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-09 19:54:53.837|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-09 19:54:55.124|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-09 19:54:55.150|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-09 19:54:55.217|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-09 19:54:55.265|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 25.326 seconds (JVM running for 30.242)
2020-07-09 19:54:57.669|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-09 19:54:57.669|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-09 19:54:57.687|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 18 ms
2020-07-09 19:55:02.176|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-09 19:55:02.199|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-09 19:55:02.205|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-09 19:55:02.217|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-09 19:55:02.264|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-09 19:55:02.267|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5add2239
2020-07-09 19:55:03.224|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-09 19:59:53.296|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 20:03:10.094|INFO |Thread-439|Thread-439|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-09 20:03:10.096|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-09 20:03:10.097|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594296190096, current=DOWN, previous=UP]
2020-07-09 20:03:10.097|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-09 20:03:10.104|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-09 20:03:10.949|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-09 20:03:10.953|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-09 20:03:10.954|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-09 20:03:10.961|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-09 20:03:10.992|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-09 20:03:13.994|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-09 20:03:14.007|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-09 20:03:14.023|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-09 20:10:17.827|WARN |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 98|app.id is not available from System Property and /META-INF/app.properties. It is set to null
2020-07-09 20:10:17.843|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-09 20:10:17.942|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-09 20:10:17.955|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-09 20:10:17.956|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:38.709|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:39.750|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-09 20:10:40.770|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-09 20:10:40.771|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:40.773|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:40.794|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:40.812|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-09 20:10:41.838|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-09 20:10:41.838|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:41.861|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-09 20:10:42.877|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-09 20:10:42.878|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:42.878|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+application.properties]
2020-07-09 20:10:42.879|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:42.896|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-09 20:10:43.920|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-09 20:10:43.920|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:43.921|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+application.properties].
2020-07-09 20:10:43.922|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-09 20:10:43.922|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-09 20:10:46.882|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-09 20:10:46.916|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-09 20:10:47.277|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-09 20:10:48.920|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-09 20:10:48.956|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-09 20:10:48.957|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-09 20:10:48.957|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-09 20:10:49.311|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-09 20:10:49.311|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 5353 ms
2020-07-09 20:10:49.863|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-09 20:10:49.866|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-09 20:10:49.907|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7769d9b6
2020-07-09 20:10:54.368|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:54.387|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-09 20:10:55.402|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-09 20:10:55.403|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:55.407|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:55.438|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-09 20:10:56.454|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-09 20:10:56.454|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:56.489|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-09 20:10:57.507|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-09 20:10:57.507|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:57.508|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+zuul-config.properties]
2020-07-09 20:10:57.509|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:57.523|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-09 20:10:58.533|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-09 20:10:58.534|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:10:58.534|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+zuul-config.properties].
2020-07-09 20:10:59.777|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-09 20:11:00.038|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-09 20:11:00.090|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-09 20:11:00.090|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-09 20:11:00.408|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-09 20:11:01.422|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-09 20:11:03.103|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-09 20:11:03.344|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-09 20:11:03.427|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-09 20:11:03.592|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-09 20:11:03.592|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-09 20:11:03.970|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-09 20:11:03.970|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-09 20:11:04.764|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 20:11:05.795|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-09 20:11:05.796|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-09 20:11:05.796|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-09 20:11:05.796|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-09 20:11:05.797|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-09 20:11:05.797|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-09 20:11:05.797|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-09 20:11:06.092|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-09 20:11:06.097|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-09 20:11:06.101|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-09 20:11:06.110|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594296666106 with initial instances count: 1
2020-07-09 20:11:06.114|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-09 20:11:06.114|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594296666114, current=UP, previous=STARTING]
2020-07-09 20:11:06.119|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-09 20:11:06.120|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-09 20:11:06.181|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-09 20:11:06.188|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-09 20:11:06.190|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-09 20:11:07.438|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-09 20:11:07.458|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-09 20:11:07.888|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-09 20:11:07.933|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 58.038 seconds (JVM running for 63.795)
2020-07-09 20:11:11.624|INFO |RMI TCP Connection(23)-192.168.106.1|RMI TCP Connection(23)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-09 20:11:11.624|INFO |RMI TCP Connection(23)-192.168.106.1|RMI TCP Connection(23)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-09 20:11:11.639|INFO |RMI TCP Connection(23)-192.168.106.1|RMI TCP Connection(23)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-09 20:11:23.010|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-09 20:11:23.031|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-09 20:11:23.032|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-09 20:11:23.041|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-09 20:11:23.073|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-09 20:11:23.085|INFO |http-nio-8080-exec-3|http-nio-8080-exec-3|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@269c69da
2020-07-09 20:11:24.049|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-09 20:15:38.688|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:15:40.773|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:15:40.813|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-09 20:15:41.824|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-09 20:15:55.404|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:15:55.418|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-09 20:15:56.429|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-09 20:16:05.802|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 20:17:30.795|WARN |http-nio-8080-exec-7|http-nio-8080-exec-7|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: 429 TOO_MANY_REQUESTS
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.lambda$run$0(RateLimitPreFilter.java:104) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at java.util.Optional.ifPresent(Optional.java:159) ~[?:1.8.0_211]
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.run(RateLimitPreFilter.java:76) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.preRoute(FilterProcessor.java:133) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.preRoute(ZuulRunner.java:105) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.preRoute(ZuulServlet.java:125) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:74) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-09 20:17:30.838|WARN |http-nio-8080-exec-7|http-nio-8080-exec-7|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-09 20:17:30.976|WARN |http-nio-8080-exec-9|http-nio-8080-exec-9|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: 429 TOO_MANY_REQUESTS
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.lambda$run$0(RateLimitPreFilter.java:104) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at java.util.Optional.ifPresent(Optional.java:159) ~[?:1.8.0_211]
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.run(RateLimitPreFilter.java:76) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.preRoute(FilterProcessor.java:133) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.preRoute(ZuulRunner.java:105) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.preRoute(ZuulServlet.java:125) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:74) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-09 20:17:31.133|WARN |http-nio-8080-exec-1|http-nio-8080-exec-1|org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run() 84|Error during filtering
com.netflix.zuul.exception.ZuulException: 429 TOO_MANY_REQUESTS
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.lambda$run$0(RateLimitPreFilter.java:104) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at java.util.Optional.ifPresent(Optional.java:159) ~[?:1.8.0_211]
	at com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.filters.RateLimitPreFilter.run(RateLimitPreFilter.java:76) ~[spring-cloud-zuul-ratelimit-core-1.3.4.RELEASE.jar:1.3.4.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.preRoute(FilterProcessor.java:133) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.preRoute(ZuulRunner.java:105) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.preRoute(ZuulServlet.java:125) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:74) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) ~[spring-cloud-netflix-zuul-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-09 20:20:38.688|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:20:40.772|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:20:40.786|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-09 20:20:41.793|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-09 20:20:55.405|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-09 20:20:55.415|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-09 20:20:56.424|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-09 20:21:05.804|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-09 23:25:25.275|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 1 seconds. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application+zuul-config, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=ApolloNoAppIdPlaceHolder&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A-1%7D%2C%7B%22namespaceName%22%3A%22zuul-config%22%2C%22notificationId%22%3A-1%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-09 23:25:26.330|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 2 seconds. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application+zuul-config, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=ApolloNoAppIdPlaceHolder&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A-1%7D%2C%7B%22namespaceName%22%3A%22zuul-config%22%2C%22notificationId%22%3A-1%7D%5D, reason: Could not complete get operation [Cause: No route to host: connect]
2020-07-09 23:25:28.354|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 4 seconds. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application+zuul-config, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=ApolloNoAppIdPlaceHolder&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A-1%7D%2C%7B%22namespaceName%22%3A%22zuul-config%22%2C%22notificationId%22%3A-1%7D%5D, reason: Could not complete get operation [Cause: No route to host: connect]
2020-07-10 08:40:31.480|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 8 seconds. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application+zuul-config, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=ApolloNoAppIdPlaceHolder&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A-1%7D%2C%7B%22namespaceName%22%3A%22zuul-config%22%2C%22notificationId%22%3A-1%7D%5D, reason: Could not complete get operation [Cause: No route to host: connect]
2020-07-10 08:40:36.065|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:38.150|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:38.844|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:40:39.844|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:40.547|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 16 seconds. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application+zuul-config, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=ApolloNoAppIdPlaceHolder&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A-1%7D%2C%7B%22namespaceName%22%3A%22zuul-config%22%2C%22notificationId%22%3A-1%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-10 08:40:40.844|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: Could not complete get operation [Cause: connect timed out]]
2020-07-10 08:40:40.844|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:41.846|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:40:43.845|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:43.847|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: Could not complete get operation [Cause: connect timed out]]
2020-07-10 08:40:43.847|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:44.849|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:40:46.849|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: Could not complete get operation [Cause: connect timed out]]
2020-07-10 08:40:46.849|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:47.847|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:47.851|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:40:49.851|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: Could not complete get operation [Cause: connect timed out]]
2020-07-10 08:40:49.851|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:50.852|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:40:51.848|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:52.853|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: Could not complete get operation [Cause: connect timed out]]
2020-07-10 08:40:52.853|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:53.855|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:40:55.849|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:55.855|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: Could not complete get operation [Cause: connect timed out]]
2020-07-10 08:40:55.855|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:56.856|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:40:57.548|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 32 seconds. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application+zuul-config, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=ApolloNoAppIdPlaceHolder&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A-1%7D%2C%7B%22namespaceName%22%3A%22zuul-config%22%2C%22notificationId%22%3A-1%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-10 08:40:57.858|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.879|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.890|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.923|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.939|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.968|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.969|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:40:57.970|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.980|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.984|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.987|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:57.991|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.001|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:40:58.008|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.019|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.022|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.041|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.064|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.087|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.100|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.104|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.110|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.114|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.121|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.126|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.131|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.159|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.181|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.184|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.189|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.192|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.196|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.199|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.202|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.205|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.207|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.212|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.216|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.219|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.226|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.231|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.236|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.240|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.244|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.251|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.254|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.258|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.263|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.266|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.287|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.344|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.348|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.352|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.356|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.361|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.365|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.369|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.373|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.378|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.418|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.426|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.431|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.434|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.438|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.443|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.446|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.450|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.454|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.457|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.461|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.464|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.467|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.473|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.478|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.482|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.485|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.489|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.493|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.496|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.500|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.503|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.506|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.509|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.512|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.516|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.520|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.525|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.529|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.533|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.537|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.540|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.544|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.547|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.550|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.554|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.567|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.570|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.574|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.577|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.582|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.586|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.592|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.596|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.600|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.611|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.637|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.648|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.655|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.661|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.667|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.677|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.681|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.684|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.687|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.690|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.693|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.696|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.699|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.701|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.704|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.707|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.711|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.714|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.717|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.720|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.723|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.727|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.729|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.732|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.734|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.737|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.740|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.743|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.746|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.748|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.751|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.753|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.756|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.758|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.760|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.763|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.766|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.769|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.772|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:58.774|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:59.014|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:40:59.014|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:40:59.031|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:00.070|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:00.070|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:00.082|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:01.148|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:01.148|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:01.324|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:02.335|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:02.335|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:02.344|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:03.184|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 08:41:03.383|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:03.383|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:03.396|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:04.409|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:04.410|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:04.418|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:05.428|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:05.428|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:05.439|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:06.446|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:06.446|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:06.454|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:07.462|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:07.462|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:07.470|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:08.484|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:08.484|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:08.491|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:09.504|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:09.505|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:09.518|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:10.526|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:10.526|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:10.533|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:11.563|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:11.563|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:11.574|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:12.584|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:12.584|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:12.592|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:13.602|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:13.602|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:13.610|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:14.617|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:14.617|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:14.625|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:15.634|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:15.634|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:15.642|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:16.650|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:16.650|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:16.657|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:17.665|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:17.665|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:17.673|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:18.682|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:18.682|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:18.690|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:19.698|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:19.698|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:19.705|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:20.712|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:20.712|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:20.719|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:21.726|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:21.726|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:21.733|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:22.740|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:22.740|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:22.779|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:23.788|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:23.788|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:23.795|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:24.801|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:24.801|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:24.809|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:25.817|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:25.818|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:25.824|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:26.832|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:26.832|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:26.840|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:27.848|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:27.848|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:27.855|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:28.864|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:28.864|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:28.871|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:29.880|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:29.880|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:29.900|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:30.914|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:30.914|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:30.953|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:31.964|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:31.964|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:31.979|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:32.988|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:32.988|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:32.998|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:34.020|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:34.020|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:34.031|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:35.041|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:35.041|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:35.049|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:36.069|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:36.069|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:36.102|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:37.110|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:37.110|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:37.117|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:38.125|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:38.126|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:38.133|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:39.142|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:39.142|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:39.149|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:40.158|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:40.158|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:40.165|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:41.174|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:41.175|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:41.184|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:42.193|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:42.193|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:42.211|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:43.218|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:43.218|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:43.226|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:44.247|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:44.247|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:44.255|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:45.263|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:45.263|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:45.271|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:46.283|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:46.283|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:46.296|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:47.306|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:47.306|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:47.313|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:48.321|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:48.321|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:48.329|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:49.342|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:49.342|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:49.348|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:50.357|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:50.358|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:50.366|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:51.372|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:51.372|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:51.379|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:52.387|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:52.387|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:52.393|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:53.400|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:53.400|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:53.408|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:54.424|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:54.424|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:54.433|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:55.439|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:55.439|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:55.446|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:56.453|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:56.453|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:56.460|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:57.468|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:57.468|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:57.474|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:41:58.481|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:41:58.481|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:58.489|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:41:59.499|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:41:59.499|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:41:59.508|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:00.517|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:00.517|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:00.528|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:01.537|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:01.537|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:01.544|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:02.551|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:02.551|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:02.558|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:03.566|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:03.566|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:03.573|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:04.596|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:04.597|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:04.613|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:05.621|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:05.621|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:05.632|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:06.638|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:06.638|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:06.645|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:07.657|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:07.657|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:07.663|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:08.674|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:08.674|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:08.683|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:09.699|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:09.699|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:09.707|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:10.714|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:10.714|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:10.724|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:11.731|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:11.732|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:11.740|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:12.747|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:12.747|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:12.754|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:13.762|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:13.762|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:13.778|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:14.789|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:14.789|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:14.803|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:15.810|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:15.810|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:15.816|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:16.824|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:16.824|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:16.834|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:17.845|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:17.845|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:17.853|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:18.869|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:18.870|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:18.881|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:19.890|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:19.890|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:19.898|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:20.907|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:20.907|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:20.915|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:21.921|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:21.921|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:21.932|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:22.940|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:22.940|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:22.950|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:23.973|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:23.973|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:23.987|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:24.996|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:24.996|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:25.003|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:26.009|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:26.009|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:26.015|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:27.023|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:27.023|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:27.030|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:28.037|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:28.037|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:28.043|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:29.057|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:29.058|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:29.066|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:30.081|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:30.081|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:30.095|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:31.105|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:31.105|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:31.112|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:32.120|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:32.120|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:32.127|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:33.146|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:33.146|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:33.155|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:34.164|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:34.164|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:34.172|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:35.182|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:35.182|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:35.191|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:36.198|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:36.198|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:36.206|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:37.214|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:37.214|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:37.222|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:38.231|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:38.231|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:38.237|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:39.250|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:39.250|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:39.258|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:40.269|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:40.269|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:40.280|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:41.288|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:41.288|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:41.303|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:42.311|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:42.311|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:42.318|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:43.328|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:43.328|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:43.339|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:44.350|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:44.350|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:44.361|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:45.371|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:45.371|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:45.379|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:46.385|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:46.385|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:46.393|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:47.403|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:47.403|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:47.412|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:48.419|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:48.419|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:48.427|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:49.434|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:49.434|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:49.442|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:50.457|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:50.457|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:50.469|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:51.477|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:51.477|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:51.486|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:52.493|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:52.493|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:52.502|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:53.509|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:53.509|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:53.515|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:54.523|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:54.524|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:54.530|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:55.553|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:55.553|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:55.564|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:56.571|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:56.571|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:56.578|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:42:57.590|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:42:57.590|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:42:57.601|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:42:58.608|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:42:58.608|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:03.610|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:05.130|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:05.130|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:05.143|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:06.149|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:06.149|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:06.156|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:07.163|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:07.164|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:07.169|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:08.178|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:08.178|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:08.188|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:09.194|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:09.195|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:09.202|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:10.235|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:10.235|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:10.246|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:11.256|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:11.256|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:11.283|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:12.290|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:12.290|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:12.297|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:13.305|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:13.305|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:13.315|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:14.324|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:14.324|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:14.333|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:15.341|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:15.341|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:15.348|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:16.354|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:16.359|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:16.367|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:17.373|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:17.373|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:17.380|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:18.386|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:18.386|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:18.393|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:19.400|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:19.400|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:19.406|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:20.421|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:20.421|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:20.428|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:21.437|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:21.438|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:21.455|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:22.461|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:22.461|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:22.468|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:23.475|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:23.475|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:23.481|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:24.492|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:24.492|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:24.500|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:25.528|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:25.528|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:25.590|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:26.596|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:26.596|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:26.603|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:27.612|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:27.612|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:27.620|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:28.638|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:28.638|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:28.648|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:29.657|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:29.657|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:29.666|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:30.684|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:30.685|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:30.697|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:31.705|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:31.705|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:31.712|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:32.727|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:32.727|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:32.736|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:33.745|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:33.745|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:33.769|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:34.776|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:34.776|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:34.784|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:35.794|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:35.794|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:35.802|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:36.808|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:36.808|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:36.820|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:37.828|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:37.828|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:37.836|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:38.844|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:38.844|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:38.850|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:39.857|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:39.857|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:39.863|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:40.873|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:40.874|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:40.888|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:41.894|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:41.894|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:41.901|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:42.908|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:42.908|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:42.915|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:43.922|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:43.922|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:43.930|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:44.939|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:44.939|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:44.947|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:45.959|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:45.959|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:45.970|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:46.978|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:46.978|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:46.987|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:47.995|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:47.995|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:48.005|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:49.017|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:49.017|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:49.025|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:50.033|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:50.034|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:50.041|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:51.049|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:51.049|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:51.056|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:52.063|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:52.063|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:52.069|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:53.088|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:53.088|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:53.095|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:54.102|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:54.102|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:54.108|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:55.115|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:55.115|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:55.127|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:56.136|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:56.137|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:56.149|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:57.155|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:57.156|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:57.164|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:43:58.171|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:43:58.171|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:58.178|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:43:59.187|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:43:59.187|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:43:59.195|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:00.206|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:00.206|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:00.218|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:01.226|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:01.226|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:01.232|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:02.238|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:02.238|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:02.250|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:03.257|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:03.257|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:03.263|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:04.271|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:04.271|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:04.278|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:05.286|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:05.286|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:05.294|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:06.302|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:06.302|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:06.309|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:07.317|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:07.317|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:07.327|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:08.336|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:08.336|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:08.343|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:09.351|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:09.351|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:09.357|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:10.363|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:10.363|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:10.370|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:11.378|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:11.378|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:11.384|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:12.399|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:12.399|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:12.406|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:13.424|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:13.425|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:13.445|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:14.451|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:14.451|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:14.457|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:15.463|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:15.463|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:15.472|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:16.481|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:16.481|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:16.488|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:17.494|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:17.494|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:17.503|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:18.509|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:18.509|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:18.516|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:19.543|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:19.543|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:19.553|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:20.565|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:20.565|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:20.571|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:21.579|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:21.580|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:21.586|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:22.592|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:22.592|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:22.599|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:23.605|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:23.605|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:23.611|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:24.618|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:24.618|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:24.624|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:25.631|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:25.631|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:25.637|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:26.645|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:26.645|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:26.651|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:27.658|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:27.659|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:27.665|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:28.679|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:28.679|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:28.687|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:29.697|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:29.697|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:29.705|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:30.717|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:30.717|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:30.728|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:31.737|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:31.737|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:31.741|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:32.748|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:32.748|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:32.756|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:33.763|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:33.763|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:33.771|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:34.778|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:34.778|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:34.785|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:35.795|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:35.795|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:35.803|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:36.818|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:36.818|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:36.824|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:37.831|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:37.831|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:37.838|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:38.846|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:38.846|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:38.853|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:39.859|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:39.860|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:39.868|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:40.874|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:40.874|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:40.881|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:41.893|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:41.893|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:41.900|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:42.906|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:42.906|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:42.916|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:43.931|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:43.931|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:43.938|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:44.945|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:44.945|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:44.951|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:45.958|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:45.958|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:45.968|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:46.981|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:46.981|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:46.992|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:47.999|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:47.999|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:48.006|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:49.015|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:49.015|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:49.023|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:50.029|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:50.029|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:50.036|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:51.045|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:51.045|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:51.052|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:52.066|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:52.066|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:52.073|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:53.080|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:53.080|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:53.086|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:54.092|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:54.092|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:54.099|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:55.107|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:55.108|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:55.115|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:56.122|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:56.122|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:56.129|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:57.137|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:57.137|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:57.143|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:44:58.150|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:44:58.150|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:58.157|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:44:59.164|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:44:59.164|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:44:59.170|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:00.182|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:00.182|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:00.190|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:01.202|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:01.202|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:01.211|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:02.220|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:02.220|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:02.226|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:03.233|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:03.233|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:03.240|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:04.246|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:04.246|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:04.253|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:05.260|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:05.260|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:05.269|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:06.276|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:06.276|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:06.283|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:07.294|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:07.294|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:07.303|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:08.309|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:08.309|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:08.317|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:09.324|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:09.324|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:09.341|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:10.349|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:10.349|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:10.355|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:11.361|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:11.361|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:11.368|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:12.377|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:12.377|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:12.382|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:13.389|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:13.389|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:13.396|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:14.402|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:14.402|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:14.408|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:15.414|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:15.414|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:15.420|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:16.431|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:16.431|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:16.441|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:17.450|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:17.450|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:17.457|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:18.473|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:18.473|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:18.480|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:19.486|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:19.486|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:19.493|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:20.500|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:20.500|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:20.507|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:21.514|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:21.514|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:21.520|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:22.529|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:22.529|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:22.535|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:23.541|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:23.541|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:23.549|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:24.560|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:24.560|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:24.570|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:25.577|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:25.577|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:25.593|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:26.600|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:26.600|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:26.607|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:27.622|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:27.622|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:27.629|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:28.638|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:28.638|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:28.646|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:29.653|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:29.653|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:29.661|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:30.668|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:30.668|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:30.676|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:31.683|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:31.683|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:31.689|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:32.697|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:32.697|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:32.705|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:33.712|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:33.712|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:33.720|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:34.727|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:34.727|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:34.734|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:34.893|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:35.743|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:35.743|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:35.759|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:36.773|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:36.773|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:36.786|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:37.797|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:37.797|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:37.804|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:38.811|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:38.811|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:38.820|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:39.832|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:39.832|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:39.840|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:40.850|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:40.850|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:40.860|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:41.871|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:41.871|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:41.880|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:42.890|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:42.891|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:42.901|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:43.911|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:43.911|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:43.919|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:44.930|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:44.930|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:44.949|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:45.957|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:45.957|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:45.965|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:46.977|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:46.977|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:46.989|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:47.997|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:47.998|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:48.004|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:49.011|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:49.011|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:49.021|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:50.076|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:50.076|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:50.114|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:51.121|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:51.121|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:51.129|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:52.134|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:52.134|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:52.142|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:53.154|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:53.154|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:53.161|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:54.178|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:54.178|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:54.186|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:55.194|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:55.194|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:55.204|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:56.213|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:56.213|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:56.225|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:57.234|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:57.235|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:57.241|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:45:58.252|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:45:58.252|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:58.259|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:45:59.268|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:45:59.268|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:45:59.276|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:46:00.286|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:46:03.187|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 08:47:06.082|INFO |Thread-482|Thread-482|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 08:47:06.102|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 08:47:06.103|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594342026102, current=DOWN, previous=UP]
2020-07-10 08:47:06.103|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 08:47:06.116|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 08:47:07.120|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 08:47:07.137|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 08:47:07.137|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 08:47:07.161|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 08:47:07.201|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 08:47:10.209|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 08:47:10.220|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 08:47:10.241|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 08:47:33.050|WARN |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 98|app.id is not available from System Property and /META-INF/app.properties. It is set to null
2020-07-10 08:47:33.065|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 08:47:33.186|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 08:47:33.202|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 08:47:33.202|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:52.716|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:52.810|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:47:53.821|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:47:53.822|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:53.823|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:53.832|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:53.841|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:47:54.851|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:47:54.852|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:54.858|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:47:55.872|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:47:55.872|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:55.873|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+application.properties]
2020-07-10 08:47:55.874|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:55.885|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:47:56.896|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:47:56.897|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:47:56.897|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+application.properties].
2020-07-10 08:47:56.898|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 08:47:56.898|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 08:47:59.373|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 08:47:59.417|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 08:47:59.825|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 08:48:01.544|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 08:48:01.565|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 08:48:01.566|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 08:48:01.567|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 08:48:01.871|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 08:48:01.871|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4940 ms
2020-07-10 08:48:02.103|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 08:48:02.105|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 08:48:02.121|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2487e20
2020-07-10 08:48:05.037|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:48:05.051|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:48:06.063|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:48:06.064|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:48:06.067|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:48:06.078|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:48:07.089|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:48:07.089|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:48:07.103|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:48:08.110|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:48:08.110|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:48:08.111|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+zuul-config.properties]
2020-07-10 08:48:08.111|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:48:08.122|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:48:09.130|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:48:09.131|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:48:09.131|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+zuul-config.properties].
2020-07-10 08:48:09.845|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 08:48:09.986|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 08:48:10.035|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 08:48:10.035|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 08:48:10.292|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 08:48:10.968|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 08:48:12.385|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 08:48:12.553|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 08:48:12.627|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 08:48:12.740|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 08:48:12.741|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 08:48:13.049|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 08:48:13.051|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 08:48:13.526|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 08:48:14.259|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 08:48:14.260|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 08:48:14.260|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 08:48:14.260|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 08:48:14.260|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 08:48:14.261|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 08:48:14.261|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 08:48:14.539|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 08:48:14.543|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 08:48:14.548|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 08:48:14.554|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594342094552 with initial instances count: 1
2020-07-10 08:48:14.557|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 08:48:14.558|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594342094558, current=UP, previous=STARTING]
2020-07-10 08:48:14.563|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 08:48:14.566|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 08:48:14.616|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 08:48:14.619|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 08:48:14.622|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 08:48:15.725|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 08:48:15.735|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 08:48:16.124|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 08:48:16.162|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 48.267 seconds (JVM running for 53.609)
2020-07-10 08:48:18.340|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 08:48:18.340|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 08:48:18.356|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 16 ms
2020-07-10 08:51:37.252|WARN |http-nio-8080-exec-1|http-nio-8080-exec-1|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 08:51:37.574|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 08:51:37.597|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 08:51:37.602|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 08:51:37.614|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 08:51:37.652|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 08:51:37.657|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6869645f
2020-07-10 08:51:38.621|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 08:52:52.699|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:52:53.823|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:52:53.835|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 08:52:54.849|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 08:53:06.065|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 08:53:06.075|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 08:53:07.090|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:53:14.265|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 08:55:01.101|INFO |Thread-501|Thread-501|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 08:55:01.103|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 08:55:01.103|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594342501103, current=DOWN, previous=UP]
2020-07-10 08:55:01.104|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 08:55:01.111|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 08:55:01.779|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 08:55:01.784|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 08:55:01.784|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 08:55:01.793|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 08:55:01.808|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 08:55:04.810|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 08:55:04.820|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 08:55:04.832|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 08:55:42.017|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 08:55:42.030|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 08:55:42.083|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 08:55:42.089|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 08:56:01.266|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 08:56:02.935|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 08:56:02.960|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 08:56:03.184|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 08:56:03.944|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 08:56:03.958|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 08:56:03.959|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 08:56:03.959|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 08:56:04.192|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 08:56:04.192|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2903 ms
2020-07-10 08:56:04.360|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 08:56:04.361|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 08:56:04.376|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4404a6b
2020-07-10 08:56:06.877|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 08:56:07.888|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:56:07.899|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 08:56:08.911|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:56:08.919|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 08:56:09.930|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:56:09.930|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 08:56:09.956|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 08:56:10.965|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 08:56:10.966|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 08:56:11.535|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 08:56:11.639|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 08:56:11.668|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 08:56:11.668|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 08:56:11.829|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 08:56:12.318|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 08:56:13.215|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 08:56:13.309|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 08:56:13.356|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 08:56:13.431|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 08:56:13.431|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 08:56:13.636|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 08:56:13.637|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 08:56:13.944|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 08:56:14.516|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 08:56:14.516|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 08:56:14.516|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 08:56:14.516|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 08:56:14.516|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 08:56:14.516|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 08:56:14.516|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 08:56:14.752|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 08:56:14.758|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 08:56:14.761|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 08:56:14.769|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594342574767 with initial instances count: 1
2020-07-10 08:56:14.772|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 08:56:14.774|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594342574774, current=UP, previous=STARTING]
2020-07-10 08:56:14.777|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 08:56:14.781|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 08:56:14.839|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 08:56:14.842|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 08:56:14.843|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 08:56:15.881|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 08:56:15.891|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 08:56:16.219|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 08:56:16.250|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 37.954 seconds (JVM running for 41.958)
2020-07-10 08:56:18.008|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 08:56:18.008|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 08:56:18.023|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 09:01:07.904|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:01:08.914|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:01:14.521|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:06:07.918|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:06:08.928|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:06:14.523|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:06:48.240|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 09:06:48.241|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594343208240, current=DOWN, previous=UP]
2020-07-10 09:06:48.241|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:06:48.246|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:06:49.040|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 09:06:49.045|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 09:06:49.065|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 09:06:52.067|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 09:06:52.072|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 09:06:52.088|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 09:07:11.886|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 09:07:11.898|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:07:11.952|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:07:11.958|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:07:44.054|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 09:07:44.072|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:07:44.242|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:07:44.254|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:08:06.080|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 09:08:07.834|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 09:08:07.857|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 09:08:08.102|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=926a1e89-f5e8-33cb-9d4b-0518ebe5a969
2020-07-10 09:08:08.159|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:08:09.171|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:08:09.189|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:08:10.199|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:08:10.212|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:08:11.221|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:08:11.222|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 09:08:11.231|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:08:12.240|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:08:12.240|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 09:08:12.370|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 09:08:12.982|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 09:08:12.995|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 09:08:12.996|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 09:08:12.996|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 09:08:13.238|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 09:08:13.238|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 7124 ms
2020-07-10 09:08:13.378|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:08:13.379|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:08:13.393|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@22ff1372
2020-07-10 09:08:16.150|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 09:08:16.253|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 09:08:16.291|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:08:16.291|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:08:16.491|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 09:08:16.999|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 09:08:18.008|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 09:08:18.106|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 09:08:18.154|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 09:08:18.240|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 09:08:18.240|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 09:08:18.417|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 09:08:18.417|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 09:08:18.703|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:08:19.269|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 09:08:19.269|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 09:08:19.269|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 09:08:19.269|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 09:08:19.270|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 09:08:19.270|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 09:08:19.270|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 09:08:19.471|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 09:08:19.476|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 09:08:19.480|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 09:08:19.484|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594343299483 with initial instances count: 1
2020-07-10 09:08:19.486|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 09:08:19.487|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594343299487, current=UP, previous=STARTING]
2020-07-10 09:08:19.491|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:08:19.495|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 09:08:19.540|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 09:08:19.542|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 09:08:19.542|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:08:20.421|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 09:08:20.428|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 09:08:20.757|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 09:08:20.786|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 41.04 seconds (JVM running for 45.425)
2020-07-10 09:08:21.277|INFO |RMI TCP Connection(4)-192.168.106.1|RMI TCP Connection(4)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 09:08:21.277|INFO |RMI TCP Connection(4)-192.168.106.1|RMI TCP Connection(4)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 09:08:21.293|INFO |RMI TCP Connection(4)-192.168.106.1|RMI TCP Connection(4)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 16 ms
2020-07-10 09:08:44.203|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:08:44.238|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:08:44.239|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 09:08:44.253|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 09:08:44.283|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:08:44.286|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@359fd615
2020-07-10 09:08:45.259|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:13:09.191|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:13:10.212|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:13:19.274|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:18:09.185|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:18:10.194|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:18:19.277|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:23:09.190|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:23:10.200|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:23:19.278|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:28:09.188|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:28:10.214|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:28:19.279|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:30:24.199|INFO |Thread-486|Thread-486|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 09:30:24.200|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 09:30:24.201|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594344624200, current=DOWN, previous=UP]
2020-07-10 09:30:24.201|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:30:24.207|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:30:24.922|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 09:30:24.928|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:30:24.929|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 09:30:24.945|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 09:30:24.967|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 09:30:27.970|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 09:30:28.009|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 09:30:28.026|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 09:30:49.380|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 09:30:49.392|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:30:49.440|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:30:49.445|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:31:08.609|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 09:31:10.205|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 09:31:10.222|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 09:31:10.313|INFO |main|main|org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses() 403|Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2020-07-10 09:31:10.434|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=5d152b9a-10b6-3228-8453-fcacfe7caa96
2020-07-10 09:31:10.558|WARN |main|main|org.springframework.boot.context.properties.PropertySourcesDeducer.getSinglePropertySourcesPlaceholderConfigurer() 66|Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
2020-07-10 09:31:11.177|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 09:31:11.192|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 09:31:11.193|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 09:31:11.193|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 09:31:11.406|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 09:31:11.406|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2774 ms
2020-07-10 09:31:11.547|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:31:11.548|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:31:11.562|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d1f23a0
2020-07-10 09:31:14.311|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 09:31:14.451|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 09:31:14.480|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:31:14.480|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:31:14.617|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 09:31:15.079|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 09:31:15.977|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 09:31:16.063|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 09:31:16.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 09:31:16.171|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 09:31:16.171|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 09:31:16.349|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 09:31:16.349|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 09:31:16.635|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:31:17.195|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 09:31:17.196|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 09:31:17.196|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 09:31:17.196|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 09:31:17.196|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 09:31:17.197|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 09:31:17.197|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 09:31:17.425|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 09:31:17.429|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 09:31:17.433|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 09:31:17.439|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594344677437 with initial instances count: 1
2020-07-10 09:31:17.443|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 09:31:17.444|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594344677444, current=UP, previous=STARTING]
2020-07-10 09:31:17.451|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:31:17.454|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 09:31:17.504|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 09:31:17.504|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:31:17.505|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 09:31:18.326|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 09:31:18.617|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 09:31:18.649|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 09:31:18.683|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 32.704 seconds (JVM running for 37.548)
2020-07-10 09:31:20.325|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 09:31:20.326|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 09:31:20.339|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 13 ms
2020-07-10 09:35:39.646|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 09:35:39.646|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594344939646, current=DOWN, previous=UP]
2020-07-10 09:35:39.648|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:35:39.659|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:35:40.456|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 09:35:40.463|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 09:35:40.477|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 09:35:43.481|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 09:35:43.497|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 09:35:43.508|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 09:35:59.331|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 09:35:59.341|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:35:59.397|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:35:59.401|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:36:18.625|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 09:36:20.224|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 09:36:20.245|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 09:36:20.449|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=926a1e89-f5e8-33cb-9d4b-0518ebe5a969
2020-07-10 09:36:21.230|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 09:36:21.243|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 09:36:21.244|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 09:36:21.244|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 09:36:21.437|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 09:36:21.438|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2789 ms
2020-07-10 09:36:21.617|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:36:21.621|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:36:21.647|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4468fda8
2020-07-10 09:36:24.565|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 09:36:24.652|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 09:36:24.681|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:36:24.681|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:36:24.831|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 09:36:25.342|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 09:36:26.254|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 09:36:26.352|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 09:36:26.399|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 09:36:26.480|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 09:36:26.480|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 09:36:26.725|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 09:36:26.725|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 09:36:27.132|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:36:27.837|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 09:36:27.837|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 09:36:27.838|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 09:36:27.838|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 09:36:27.838|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 09:36:27.839|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 09:36:27.839|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 09:36:28.044|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 09:36:28.049|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 09:36:28.052|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 09:36:28.056|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594344988054 with initial instances count: 1
2020-07-10 09:36:28.059|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 09:36:28.060|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594344988060, current=UP, previous=STARTING]
2020-07-10 09:36:28.063|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:36:28.067|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 09:36:28.439|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:36:28.440|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 09:36:28.442|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 09:36:29.312|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 09:36:29.323|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 09:36:29.370|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 09:36:29.410|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 33.581 seconds (JVM running for 37.602)
2020-07-10 09:36:30.596|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 09:36:30.597|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 09:36:30.612|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 14 ms
2020-07-10 09:36:50.323|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:36:50.349|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:36:50.351|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 09:36:50.358|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 09:36:50.377|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:36:50.379|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@209d482c
2020-07-10 09:36:51.363|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:41:27.843|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:42:48.672|INFO |Thread-468|Thread-468|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 09:42:48.674|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 09:42:48.674|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594345368674, current=DOWN, previous=UP]
2020-07-10 09:42:48.675|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:42:48.682|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:42:49.546|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 09:42:49.549|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:42:49.549|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 09:42:49.557|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 09:42:49.572|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 09:42:52.575|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 09:42:52.581|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 09:42:52.596|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 09:43:27.017|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 09:43:27.030|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:43:27.108|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:43:27.112|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:43:46.219|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 09:43:48.236|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 09:43:48.263|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 09:43:48.477|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 09:43:49.301|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 09:43:49.313|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 09:43:49.314|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 09:43:49.314|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 09:43:49.515|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 09:43:49.515|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3272 ms
2020-07-10 09:43:49.687|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:43:49.688|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:43:49.706|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@46894dc5
2020-07-10 09:43:52.107|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:43:53.119|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:43:53.131|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:43:54.140|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:43:54.148|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:43:55.163|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:43:55.164|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 09:43:55.199|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:43:56.210|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:43:56.211|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 09:43:56.833|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 09:43:56.941|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 09:43:56.969|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:43:56.970|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:43:57.118|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 09:43:57.640|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 09:43:58.631|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 09:43:58.733|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 09:43:58.779|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 09:43:58.854|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 09:43:58.854|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 09:43:59.085|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 09:43:59.085|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 09:43:59.457|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:44:00.287|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 09:44:00.288|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 09:44:00.288|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 09:44:00.288|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 09:44:00.288|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 09:44:00.288|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 09:44:00.289|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 09:44:00.588|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 09:44:00.593|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 09:44:00.601|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 09:44:00.610|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594345440605 with initial instances count: 1
2020-07-10 09:44:00.616|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 09:44:00.618|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594345440617, current=UP, previous=STARTING]
2020-07-10 09:44:00.622|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:44:00.626|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 09:44:00.701|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 09:44:00.702|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 09:44:01.013|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:44:01.832|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 09:44:01.839|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 09:44:01.871|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 09:44:01.905|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 38.331 seconds (JVM running for 42.312)
2020-07-10 09:44:03.222|INFO |RMI TCP Connection(20)-192.168.106.1|RMI TCP Connection(20)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 09:44:03.223|INFO |RMI TCP Connection(20)-192.168.106.1|RMI TCP Connection(20)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 09:44:03.236|INFO |RMI TCP Connection(20)-192.168.106.1|RMI TCP Connection(20)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 13 ms
2020-07-10 09:44:13.915|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 09:44:13.915|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594345453915, current=DOWN, previous=UP]
2020-07-10 09:44:13.915|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:44:13.925|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:44:14.695|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 09:44:14.700|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 09:44:14.716|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 09:44:17.718|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 09:44:17.723|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 09:44:17.734|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 09:44:44.161|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 09:44:44.172|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:44:44.224|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:44:44.229|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:45:03.342|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 09:45:04.916|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 09:45:04.935|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 09:45:05.140|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 09:45:05.912|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 09:45:05.924|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 09:45:05.925|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 09:45:05.925|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 09:45:06.119|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 09:45:06.119|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2752 ms
2020-07-10 09:45:06.267|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:45:06.268|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:45:06.280|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@370a8b6e
2020-07-10 09:45:08.748|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:45:09.758|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:45:09.770|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:45:10.780|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:45:10.787|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:45:11.796|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:45:11.797|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 09:45:11.808|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:45:12.821|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:45:12.822|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 09:45:13.590|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 09:45:13.706|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 09:45:13.745|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:45:13.745|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:45:14.015|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 09:45:14.599|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 09:45:15.489|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 09:45:15.578|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 09:45:15.624|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 09:45:15.699|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 09:45:15.699|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 09:45:15.881|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 09:45:15.881|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 09:45:16.190|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:45:16.773|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 09:45:16.774|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 09:45:16.774|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 09:45:16.774|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 09:45:16.774|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 09:45:16.774|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 09:45:16.774|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 09:45:16.985|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 09:45:16.989|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 09:45:16.992|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 09:45:16.997|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594345516995 with initial instances count: 1
2020-07-10 09:45:17.001|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 09:45:17.003|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594345517002, current=UP, previous=STARTING]
2020-07-10 09:45:17.006|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:45:17.009|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 09:45:17.057|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 09:45:17.059|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 09:45:17.370|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:45:18.137|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 09:45:18.147|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 09:45:18.198|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 09:45:18.251|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 37.724 seconds (JVM running for 41.852)
2020-07-10 09:45:19.607|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 09:45:19.608|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 09:45:19.621|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 12 ms
2020-07-10 09:45:55.141|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:45:55.158|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:45:55.159|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 09:45:55.166|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 09:45:55.189|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:45:55.191|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1a2f6610
2020-07-10 09:45:56.170|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:50:09.770|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 09:50:10.780|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:50:16.779|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:50:33.553|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 09:50:33.553|INFO |Thread-477|Thread-477|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 09:50:33.554|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594345833553, current=DOWN, previous=UP]
2020-07-10 09:50:33.554|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:50:33.562|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:50:34.231|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 09:50:34.236|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:50:34.236|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 09:50:34.247|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 09:50:34.264|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 09:50:37.266|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 09:50:37.272|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 09:50:37.284|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 09:50:48.754|WARN |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 98|app.id is not available from System Property and /META-INF/app.properties. It is set to null
2020-07-10 09:50:48.766|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:50:48.862|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:50:48.872|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:50:48.873|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:08.189|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:08.207|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 09:51:09.220|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:51:09.221|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:09.223|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:09.231|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:09.242|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 09:51:10.252|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:51:10.252|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:10.258|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 09:51:11.268|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:51:11.268|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:11.268|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+zuul-config.properties]
2020-07-10 09:51:11.269|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:11.277|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 09:51:12.285|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:51:12.285|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:12.286|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+zuul-config.properties].
2020-07-10 09:51:12.287|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 09:51:12.287|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 09:51:13.959|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 09:51:13.979|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 09:51:14.242|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 09:51:14.270|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:14.290|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 09:51:15.297|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 09:51:15.298|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:15.302|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:15.310|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 09:51:16.317|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 09:51:16.317|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:16.323|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 09:51:17.330|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 09:51:17.331|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:17.331|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+application.properties]
2020-07-10 09:51:17.332|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:17.338|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 09:51:18.346|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 09:51:18.346|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:51:18.347|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\ApolloNoAppIdPlaceHolder\config-cache\ApolloNoAppIdPlaceHolder+default+application.properties].
2020-07-10 09:51:18.486|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 09:51:19.084|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 09:51:19.096|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 09:51:19.097|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 09:51:19.097|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 09:51:19.372|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 09:51:19.372|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 7059 ms
2020-07-10 09:51:19.544|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:51:19.546|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:51:19.563|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d132bb6
2020-07-10 09:51:22.477|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 09:51:22.568|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 09:51:22.594|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 09:51:22.594|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 09:51:22.743|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 09:51:23.220|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 09:51:24.103|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 09:51:24.204|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 09:51:24.250|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 09:51:24.322|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 09:51:24.322|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 09:51:24.513|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 09:51:24.513|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 09:51:24.901|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:51:25.575|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 09:51:25.575|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 09:51:25.576|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 09:51:25.576|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 09:51:25.576|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 09:51:25.576|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 09:51:25.576|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 09:51:25.828|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 09:51:25.831|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 09:51:25.836|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 09:51:25.840|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594345885839 with initial instances count: 1
2020-07-10 09:51:25.844|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 09:51:25.845|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594345885845, current=UP, previous=STARTING]
2020-07-10 09:51:25.848|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:51:25.851|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 09:51:25.898|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 09:51:25.900|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 09:51:25.900|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:51:26.739|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 09:51:26.749|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 09:51:27.048|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 09:51:27.078|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 41.622 seconds (JVM running for 45.431)
2020-07-10 09:51:28.709|INFO |RMI TCP Connection(19)-192.168.106.1|RMI TCP Connection(19)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 09:51:28.710|INFO |RMI TCP Connection(19)-192.168.106.1|RMI TCP Connection(19)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 09:51:28.719|INFO |RMI TCP Connection(19)-192.168.106.1|RMI TCP Connection(19)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 9 ms
2020-07-10 09:52:14.291|WARN |http-nio-8080-exec-1|http-nio-8080-exec-1|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 09:52:14.627|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:52:14.652|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:52:14.654|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 09:52:14.665|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 09:52:14.693|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:52:14.697|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5c6892df
2020-07-10 09:52:15.672|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 09:56:08.178|WARN |Apollo-ConfigServiceLocator-1|Apollo-ConfigServiceLocator-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:56:09.222|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:56:09.239|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: zuul-config
2020-07-10 09:56:10.248|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 09:56:15.298|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:56:15.309|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: ApolloNoAppIdPlaceHolder, cluster: default, namespaces: application
2020-07-10 09:56:16.318|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, url: http://192.168.106.129:8080/configs/ApolloNoAppIdPlaceHolder/default/application?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: ApolloNoAppIdPlaceHolder, cluster: default, namespace: application, please check whether the configs are released in Apollo!]
2020-07-10 09:56:25.581|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 09:57:09.860|INFO |Thread-482|Thread-482|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 09:57:09.862|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 09:57:09.862|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594346229862, current=DOWN, previous=UP]
2020-07-10 09:57:09.862|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 09:57:09.870|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 09:57:10.907|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 09:57:10.914|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 09:57:10.914|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 09:57:10.929|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 09:57:10.958|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 09:57:13.960|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 09:57:13.967|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 09:57:13.984|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 09:57:37.632|WARN |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 98|app.id is not available from System Property and /META-INF/app.properties. It is set to null
2020-07-10 09:57:37.655|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:57:37.797|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:57:37.815|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 09:57:37.815|WARN |main|main|com.ctrip.framework.apollo.util.ConfigUtil.getAppId() 58|app.id is not set, please make sure it is set in classpath:/META-INF/app.properties, now apollo will only load public namespace configurations!
2020-07-10 09:59:57.928|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 09:59:57.939|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 09:59:57.987|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 09:59:57.992|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:00:17.100|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:00:18.109|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:00:18.127|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:00:19.135|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:00:19.146|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:00:20.158|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:00:20.159|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:00:20.174|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:00:21.187|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:00:21.188|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:00:21.188|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:00:21.188|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:00:40.913|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 10:00:40.926|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 10:00:40.997|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:00:41.003|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:01:00.391|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:01:01.400|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:01:01.429|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:01:02.440|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:01:02.449|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:01:03.460|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:01:03.460|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:01:03.497|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:01:04.506|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:01:04.506|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:01:04.507|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:01:04.507|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:01:06.395|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:01:06.413|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:01:06.616|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:01:07.374|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:01:07.385|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:01:07.385|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:01:07.385|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:01:07.583|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:01:07.584|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3041 ms
2020-07-10 10:01:07.734|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:01:07.735|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:01:07.751|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6cc8da1c
2020-07-10 10:01:10.657|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:01:10.808|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:01:10.851|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:01:10.851|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:01:11.099|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:01:11.657|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:01:12.615|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:01:12.712|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:01:12.758|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:01:12.830|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:01:12.830|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:01:13.027|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:01:13.027|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:01:13.360|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:01:13.943|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:01:13.943|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:01:13.943|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:01:13.943|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:01:13.943|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:01:13.944|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:01:13.944|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:01:14.160|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:01:14.163|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:01:14.167|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:01:14.172|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594346474170 with initial instances count: 1
2020-07-10 10:01:14.175|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:01:14.176|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594346474176, current=UP, previous=STARTING]
2020-07-10 10:01:14.179|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:01:14.181|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:01:14.237|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:01:14.239|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:01:14.248|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:01:15.300|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:01:15.311|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:01:15.650|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:01:15.690|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 38.909 seconds (JVM running for 42.943)
2020-07-10 10:01:15.794|INFO |RMI TCP Connection(17)-192.168.106.1|RMI TCP Connection(17)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:01:15.794|INFO |RMI TCP Connection(17)-192.168.106.1|RMI TCP Connection(17)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:01:15.809|INFO |RMI TCP Connection(17)-192.168.106.1|RMI TCP Connection(17)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 10:02:17.803|WARN |http-nio-8080-exec-6|http-nio-8080-exec-6|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:02:18.011|INFO |http-nio-8080-exec-6|http-nio-8080-exec-6|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:02:18.028|INFO |http-nio-8080-exec-6|http-nio-8080-exec-6|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 10:02:18.029|INFO |http-nio-8080-exec-6|http-nio-8080-exec-6|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 10:02:18.037|INFO |http-nio-8080-exec-6|http-nio-8080-exec-6|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 10:02:18.061|INFO |http-nio-8080-exec-6|http-nio-8080-exec-6|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:02:18.066|INFO |http-nio-8080-exec-6|http-nio-8080-exec-6|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5dd5eba0
2020-07-10 10:02:19.042|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:05:46.980|INFO |Thread-475|Thread-475|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 10:05:46.982|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:05:46.983|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594346746983, current=DOWN, previous=UP]
2020-07-10 10:05:46.983|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:05:46.989|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:05:47.623|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:05:47.626|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 10:05:47.626|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 10:05:47.633|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:05:47.646|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:05:50.649|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:05:50.656|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:05:50.674|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:06:35.348|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:06:35.361|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 10:06:35.421|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:06:35.426|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:06:55.802|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:06:56.814|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:06:56.845|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:06:57.855|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:06:57.864|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:06:58.875|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:06:58.876|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:06:58.885|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:06:59.910|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:06:59.911|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:06:59.912|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:06:59.912|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:07:02.284|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:07:02.307|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:07:02.544|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:07:03.372|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:07:03.384|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:07:03.384|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:07:03.385|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:07:03.597|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:07:03.597|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3642 ms
2020-07-10 10:07:03.743|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:07:03.745|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:07:03.757|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a70575
2020-07-10 10:07:06.824|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:07:06.905|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:07:06.934|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:07:06.935|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:07:07.080|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:07:07.546|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:07:08.413|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:07:08.508|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:07:08.588|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:07:08.658|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:07:08.658|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:07:08.832|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:07:08.832|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:07:09.151|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:07:09.688|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:07:09.688|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:07:09.688|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:07:09.688|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:07:09.689|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:07:09.689|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:07:09.689|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:07:09.876|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:07:09.879|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:07:09.882|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:07:09.886|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594346829885 with initial instances count: 1
2020-07-10 10:07:09.891|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:07:09.892|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594346829892, current=UP, previous=STARTING]
2020-07-10 10:07:09.899|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:07:09.910|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:07:09.952|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:07:09.961|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:07:09.963|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:07:10.895|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:07:11.214|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:07:11.258|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:07:11.294|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 40.116 seconds (JVM running for 46.656)
2020-07-10 10:07:12.344|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:07:12.344|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:07:12.356|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 11 ms
2020-07-10 10:08:34.039|WARN |http-nio-8080-exec-1|http-nio-8080-exec-1|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:08:34.207|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:08:34.223|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 10:08:34.224|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 10:08:34.232|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 10:08:34.256|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:08:34.258|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6eb9f4b6
2020-07-10 10:08:35.237|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:10:19.982|INFO |Thread-475|Thread-475|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 10:10:19.982|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:10:19.982|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594347019982, current=DOWN, previous=UP]
2020-07-10 10:10:19.983|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:10:19.988|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:10:20.867|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:10:20.872|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 10:10:20.872|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 10:10:20.880|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:10:20.896|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:10:23.898|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:10:23.904|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:10:23.917|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:10:43.852|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:10:43.864|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 10:10:43.952|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:10:43.959|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:11:03.088|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:11:04.101|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:11:04.124|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:11:05.133|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:11:05.142|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:11:06.152|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:11:06.153|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:11:06.164|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:11:07.183|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:11:07.183|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:11:07.184|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:11:07.185|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:11:09.441|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:11:09.476|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:11:09.809|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:11:10.616|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:11:10.627|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:11:10.628|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:11:10.628|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:11:10.857|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:11:10.857|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3644 ms
2020-07-10 10:11:11.011|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:11:11.012|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:11:11.025|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@29f95272
2020-07-10 10:11:13.882|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:11:14.003|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:11:14.044|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:11:14.044|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:11:14.253|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:11:14.842|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:11:15.763|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:11:15.850|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:11:15.896|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:11:15.965|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:11:15.966|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:11:16.135|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:11:16.136|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:11:16.421|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:11:16.981|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:11:16.982|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:11:16.982|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:11:16.982|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:11:16.983|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:11:16.983|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:11:16.983|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:11:17.179|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:11:17.183|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:11:17.186|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:11:17.192|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594347077191 with initial instances count: 1
2020-07-10 10:11:17.195|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:11:17.196|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594347077196, current=UP, previous=STARTING]
2020-07-10 10:11:17.200|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:11:17.202|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:11:17.256|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:11:17.259|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:11:17.267|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:11:18.107|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:11:18.407|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:11:18.445|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:11:18.475|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 38.149 seconds (JVM running for 42.242)
2020-07-10 10:11:18.611|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:11:18.611|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:11:18.626|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 10:15:12.099|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:15:12.100|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594347312100, current=DOWN, previous=UP]
2020-07-10 10:15:12.100|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:15:12.106|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:15:13.189|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:15:13.195|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:15:13.224|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:15:16.229|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:15:16.236|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:15:16.254|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:15:42.550|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:15:42.564|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:15:42.635|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:15:42.642|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:16:02.417|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:16:03.427|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:16:03.452|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:16:04.465|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:16:04.480|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:16:05.512|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:16:05.512|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:16:05.526|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:16:06.537|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:16:06.538|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:16:06.539|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:16:06.540|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:16:08.818|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:16:08.842|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:16:09.369|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:16:11.017|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:16:11.034|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:16:11.036|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:16:11.036|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:16:11.384|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:16:11.385|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4816 ms
2020-07-10 10:16:11.584|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:16:11.586|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:16:11.608|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@315cf170
2020-07-10 10:16:16.072|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:16:16.195|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:16:16.233|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:16:16.234|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:16:16.529|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:16:17.278|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:16:19.079|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:16:19.274|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:16:19.362|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:16:19.485|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:16:19.485|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:16:19.755|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:16:19.755|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:16:20.223|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:16:21.010|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:16:21.011|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:16:21.011|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:16:21.012|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:16:21.012|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:16:21.012|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:16:21.012|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:16:21.312|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:16:21.317|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:16:21.321|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:16:21.328|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594347381326 with initial instances count: 1
2020-07-10 10:16:21.331|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:16:21.333|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594347381332, current=UP, previous=STARTING]
2020-07-10 10:16:21.337|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:16:21.340|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:16:21.395|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:16:21.396|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:16:21.398|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:16:22.722|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:16:22.735|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:16:23.227|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:16:23.295|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 45.492 seconds (JVM running for 50.803)
2020-07-10 10:16:24.737|INFO |RMI TCP Connection(21)-192.168.106.1|RMI TCP Connection(21)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:16:24.737|INFO |RMI TCP Connection(21)-192.168.106.1|RMI TCP Connection(21)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:16:24.756|INFO |RMI TCP Connection(21)-192.168.106.1|RMI TCP Connection(21)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 19 ms
2020-07-10 10:16:58.659|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:16:58.685|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 10:16:58.686|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 10:16:58.696|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 10:16:58.719|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:16:58.723|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@25fe75fe
2020-07-10 10:16:59.702|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 10:18:37.245|INFO |Thread-480|Thread-480|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 10:18:37.248|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:18:37.249|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594347517249, current=DOWN, previous=UP]
2020-07-10 10:18:37.249|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:18:37.255|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:18:38.098|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:18:38.101|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 10:18:38.102|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 10:18:38.110|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:18:38.130|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:18:41.132|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:18:41.142|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:18:41.157|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:19:00.913|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:19:00.942|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:19:01.088|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:19:01.105|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:19:44.362|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:19:44.370|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:19:44.430|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:19:44.436|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:20:03.485|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:20:04.515|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:20:04.556|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:20:05.566|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:20:05.575|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:20:06.588|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:20:06.588|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:20:06.599|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:20:07.612|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:20:07.612|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:20:07.613|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:20:07.614|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:20:09.662|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:20:09.720|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:20:09.981|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:20:10.938|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:20:10.957|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:20:10.958|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:20:10.958|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:20:11.200|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:20:11.200|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3554 ms
2020-07-10 10:20:11.379|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:20:11.380|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:20:11.396|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7ee64b53
2020-07-10 10:20:14.210|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:20:14.298|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:20:14.338|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:20:14.339|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:20:14.519|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:20:15.234|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:20:16.625|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:20:16.755|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:20:16.814|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:20:16.913|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:20:16.913|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:20:17.170|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:20:17.170|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:20:17.538|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:20:18.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:20:18.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:20:18.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:20:18.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:20:18.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:20:18.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:20:18.105|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:20:18.314|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:20:18.317|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:20:18.321|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:20:18.325|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594347618323 with initial instances count: 1
2020-07-10 10:20:18.328|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:20:18.329|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594347618329, current=UP, previous=STARTING]
2020-07-10 10:20:18.332|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:20:18.334|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:20:18.387|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:20:18.394|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:20:18.400|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:20:19.438|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:20:19.812|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:20:19.866|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:20:19.905|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 39.176 seconds (JVM running for 43.051)
2020-07-10 10:20:21.264|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:20:21.265|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:20:21.283|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 17 ms
2020-07-10 10:25:04.532|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:25:05.541|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:25:18.109|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:27:55.832|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:27:55.833|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594348075833, current=DOWN, previous=UP]
2020-07-10 10:27:55.833|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:27:55.841|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:27:56.627|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:27:56.633|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:27:56.654|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:27:59.659|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:27:59.666|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:27:59.685|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:28:20.298|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:28:20.321|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:28:20.412|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080 -Denv=dev!
2020-07-10 10:28:20.424|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 -Denv=dev for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:28:43.773|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:28:45.786|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:28:47.796|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 1 seconds. appId: zuul-config, cluster: default, namespaces: zuul-config, long polling url: null, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:28:49.789|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:28:49.790|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:28:51.791|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 2 seconds. appId: zuul-config, cluster: default, namespaces: zuul-config, long polling url: null, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:28:53.791|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:28:53.792|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:28:53.793|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:28:53.795|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:28:55.794|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 4 seconds. appId: zuul-config, cluster: default, namespaces: zuul-config, long polling url: null, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:28:56.389|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:28:56.585|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:28:56.998|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:28:58.218|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:28:58.235|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:28:58.236|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:28:58.236|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:28:58.484|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:28:58.484|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4643 ms
2020-07-10 10:28:58.682|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:28:58.684|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:28:58.709|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7a1ddbf1
2020-07-10 10:29:01.795|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 8 seconds. appId: zuul-config, cluster: default, namespaces: zuul-config, long polling url: null, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:29:03.419|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:29:03.592|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:29:03.657|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:29:03.658|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:29:04.093|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:29:05.018|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:29:06.661|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:29:06.794|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:29:06.886|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:29:07.034|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:29:07.034|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:29:07.280|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:29:07.281|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:29:07.780|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:29:08.561|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:29:08.561|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:29:08.561|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:29:08.562|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:29:08.562|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:29:08.562|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:29:08.562|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:29:08.878|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:29:08.883|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:29:08.887|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:29:08.895|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594348148892 with initial instances count: 1
2020-07-10 10:29:08.899|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:29:08.900|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594348148900, current=UP, previous=STARTING]
2020-07-10 10:29:08.906|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:29:08.910|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:29:08.968|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:29:08.969|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:29:08.971|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:29:10.378|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:29:10.391|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:29:10.451|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:29:10.512|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 55.26 seconds (JVM running for 60.893)
2020-07-10 10:29:11.798|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 16 seconds. appId: zuul-config, cluster: default, namespaces: zuul-config, long polling url: null, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:29:13.087|INFO |RMI TCP Connection(28)-192.168.106.1|RMI TCP Connection(28)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:29:13.087|INFO |RMI TCP Connection(28)-192.168.106.1|RMI TCP Connection(28)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:29:13.106|INFO |RMI TCP Connection(28)-192.168.106.1|RMI TCP Connection(28)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 19 ms
2020-07-10 10:29:29.800|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 32 seconds. appId: zuul-config, cluster: default, namespaces: zuul-config, long polling url: null, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:30:03.803|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 64 seconds. appId: zuul-config, cluster: default, namespaces: zuul-config, long polling url: null, reason: Get config services failed from http://192.168.106.129:8080 -Denv=dev/services/config?appId=zuul-config&ip=192.168.101.139 [Cause: Could not complete get operation [Cause: For input string: "8080 -Denv=dev" [Cause: For input string: "8080 -Denv=dev"]]]
2020-07-10 10:30:35.543|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:30:35.543|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594348235543, current=DOWN, previous=UP]
2020-07-10 10:30:35.544|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:30:35.550|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:30:36.418|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:30:36.422|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:30:36.437|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:30:39.439|WARN |DiscoveryClient-0|DiscoveryClient-0|com.netflix.discovery.TimedSupervisorTask.run() 90|task supervisor shutting down, can't accept the task
2020-07-10 10:30:39.440|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:30:39.445|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:30:39.461|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:30:57.194|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:30:57.209|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:30:57.321|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:30:57.330|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:31:16.965|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:31:17.978|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:31:17.999|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:31:19.009|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:31:19.021|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:31:20.038|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:31:20.038|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:31:20.058|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:31:21.081|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:31:21.081|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:31:21.082|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:31:21.083|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:31:23.529|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:31:23.550|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:31:23.823|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:31:24.813|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:31:24.829|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:31:24.830|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:31:24.830|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:31:25.083|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:31:25.083|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3962 ms
2020-07-10 10:31:25.274|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:31:25.276|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:31:25.297|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@286a4c52
2020-07-10 10:31:30.053|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:31:30.206|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:31:30.250|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:31:30.251|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:31:30.534|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:31:31.491|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:31:33.190|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:31:33.381|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:31:33.465|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:31:33.573|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:31:33.573|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:31:33.847|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:31:33.848|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:31:34.307|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:31:35.117|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:31:35.118|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:31:35.118|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:31:35.118|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:31:35.118|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:31:35.119|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:31:35.119|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:31:35.406|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:31:35.413|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:31:35.417|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:31:35.424|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594348295421 with initial instances count: 1
2020-07-10 10:31:35.427|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:31:35.428|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594348295428, current=UP, previous=STARTING]
2020-07-10 10:31:35.432|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:31:35.435|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:31:35.489|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:31:35.492|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:31:35.494|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:31:36.824|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:31:36.846|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:31:37.351|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:31:37.427|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 45.248 seconds (JVM running for 51.605)
2020-07-10 10:31:39.020|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:31:39.020|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:31:39.039|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 18 ms
2020-07-10 10:36:17.992|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:36:19.001|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:36:35.122|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:41:18.005|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:41:19.014|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:41:35.124|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:46:17.995|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:46:19.006|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:46:21.180|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:46:21.181|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594349181181, current=DOWN, previous=UP]
2020-07-10 10:46:21.181|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:46:21.188|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:46:21.780|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:46:21.797|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:46:21.828|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:46:24.836|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:46:24.845|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:46:24.860|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:46:42.296|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 10:46:42.307|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:46:42.352|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:46:42.356|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:47:01.908|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:47:02.920|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:47:02.937|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:47:03.948|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:47:03.959|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:47:04.968|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:47:04.969|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:47:04.978|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:47:05.997|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:47:05.998|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:47:05.999|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:47:06.000|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:47:07.740|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:47:07.769|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:47:08.005|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:47:08.764|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:47:08.781|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:47:08.782|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:47:08.782|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:47:09.045|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:47:09.045|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3017 ms
2020-07-10 10:47:09.206|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:47:09.207|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:47:09.219|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@14dbfdb1
2020-07-10 10:47:12.031|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:47:12.154|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:47:12.180|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:47:12.180|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:47:12.324|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:47:12.807|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:47:13.676|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:47:13.759|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:47:13.804|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:47:13.871|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:47:13.872|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:47:14.048|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:47:14.048|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:47:14.343|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:47:14.879|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:47:14.880|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:47:14.880|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:47:14.880|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:47:14.880|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:47:14.880|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:47:14.880|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:47:15.063|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:47:15.066|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:47:15.070|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:47:15.075|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594349235073 with initial instances count: 1
2020-07-10 10:47:15.079|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:47:15.079|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594349235079, current=UP, previous=STARTING]
2020-07-10 10:47:15.082|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:47:15.085|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:47:15.128|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:47:15.130|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:47:15.134|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:47:15.943|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:47:16.225|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:47:16.257|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:47:16.289|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 38.005 seconds (JVM running for 41.9)
2020-07-10 10:47:18.094|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:47:18.094|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:47:18.107|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 12 ms
2020-07-10 10:52:02.934|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:52:03.943|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:52:14.883|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:56:15.012|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:56:15.013|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594349775012, current=DOWN, previous=UP]
2020-07-10 10:56:15.013|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:56:15.019|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:56:15.649|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:56:15.652|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:56:15.666|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:56:18.669|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:56:18.673|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:56:18.688|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:56:34.626|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 10:56:34.636|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:56:34.691|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:56:34.697|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:56:53.800|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:56:55.509|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:56:55.527|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:56:55.763|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:56:55.811|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:56:56.820|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:56:56.832|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:56:57.843|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:56:57.852|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:56:58.863|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:56:58.863|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:56:58.883|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:56:59.923|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:56:59.923|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:57:00.133|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:57:00.796|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:57:00.810|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:57:00.811|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:57:00.811|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:57:01.043|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:57:01.044|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 7215 ms
2020-07-10 10:57:01.221|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:57:01.223|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:57:01.235|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@b77b0a0
2020-07-10 10:57:03.797|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:57:03.928|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:57:03.955|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:57:03.955|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:57:04.101|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:57:04.748|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:57:05.872|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:57:06.005|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:57:06.055|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:57:06.128|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:57:06.128|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:57:06.298|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:57:06.298|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:57:06.596|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:57:07.168|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:57:07.168|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:57:07.168|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:57:07.168|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:57:07.168|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:57:07.168|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:57:07.169|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:57:07.384|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:57:07.391|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:57:07.396|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:57:07.401|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594349827399 with initial instances count: 1
2020-07-10 10:57:07.403|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:57:07.404|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594349827404, current=UP, previous=STARTING]
2020-07-10 10:57:07.408|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:57:07.411|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:57:07.455|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:57:07.459|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:57:07.461|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:57:08.338|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:57:08.618|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:57:08.660|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:57:08.692|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 37.45 seconds (JVM running for 41.674)
2020-07-10 10:57:10.462|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:57:10.463|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:57:10.476|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 13 ms
2020-07-10 10:57:39.627|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:57:39.627|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594349859627, current=DOWN, previous=UP]
2020-07-10 10:57:39.628|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:57:39.634|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:57:40.379|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:57:40.383|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:57:40.397|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:57:43.400|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:57:43.406|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:57:43.419|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:57:55.069|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:57:55.079|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:57:55.161|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:57:55.165|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:58:14.572|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:58:16.127|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:58:16.144|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:58:16.357|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:58:16.394|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:58:17.409|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:58:17.423|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:58:18.437|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:58:18.446|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:58:19.455|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:58:19.456|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:58:19.465|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:58:20.474|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:58:20.475|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:58:20.597|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:58:21.177|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:58:21.194|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:58:21.194|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:58:21.195|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:58:21.391|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:58:21.391|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 6794 ms
2020-07-10 10:58:21.534|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:58:21.534|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:58:21.547|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@100807ca
2020-07-10 10:58:24.401|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:58:24.487|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:58:24.516|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:58:24.516|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:58:24.665|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:58:25.277|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:58:26.172|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:58:26.264|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:58:26.326|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:58:26.423|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:58:26.423|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:58:26.620|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:58:26.620|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:58:27.015|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:58:27.724|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:58:27.724|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:58:27.724|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:58:27.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:58:27.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:58:27.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:58:27.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:58:28.136|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:58:28.142|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:58:28.147|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:58:28.153|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594349908151 with initial instances count: 1
2020-07-10 10:58:28.157|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:58:28.158|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594349908158, current=UP, previous=STARTING]
2020-07-10 10:58:28.162|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:58:28.165|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:58:28.220|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:58:28.222|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:58:28.224|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:58:29.236|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:58:29.244|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:58:29.684|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:58:29.727|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 37.91 seconds (JVM running for 41.483)
2020-07-10 10:58:31.430|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:58:31.430|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:58:31.444|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 14 ms
2020-07-10 10:59:04.525|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 10:59:04.525|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594349944525, current=DOWN, previous=UP]
2020-07-10 10:59:04.525|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:59:04.532|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:59:05.154|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 10:59:05.157|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 10:59:05.170|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 10:59:08.173|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 10:59:08.177|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 10:59:08.188|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 10:59:20.854|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 10:59:20.871|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 10:59:20.944|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 10:59:20.949|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 10:59:40.353|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 10:59:41.921|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 10:59:41.939|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 10:59:42.143|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 10:59:42.182|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:59:43.196|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:59:43.216|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:59:44.241|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:59:44.249|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:59:45.261|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:59:45.262|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 10:59:45.276|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 10:59:46.285|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 10:59:46.286|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 10:59:46.428|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 10:59:47.196|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 10:59:47.220|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 10:59:47.222|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 10:59:47.222|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 10:59:47.479|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 10:59:47.480|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 7102 ms
2020-07-10 10:59:47.717|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:59:47.718|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:59:47.741|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@76ffc17c
2020-07-10 10:59:50.900|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 10:59:51.012|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 10:59:51.044|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 10:59:51.044|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 10:59:51.243|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 10:59:51.724|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 10:59:52.827|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 10:59:52.965|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 10:59:53.025|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 10:59:53.126|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 10:59:53.127|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 10:59:53.398|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 10:59:53.398|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 10:59:53.732|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 10:59:54.326|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 10:59:54.326|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 10:59:54.326|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 10:59:54.326|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 10:59:54.327|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 10:59:54.327|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 10:59:54.327|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 10:59:54.535|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 10:59:54.538|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 10:59:54.542|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 10:59:54.547|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594349994545 with initial instances count: 1
2020-07-10 10:59:54.549|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 10:59:54.551|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594349994550, current=UP, previous=STARTING]
2020-07-10 10:59:54.554|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 10:59:54.556|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 10:59:54.600|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 10:59:54.602|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 10:59:54.602|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 10:59:55.477|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 10:59:55.792|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 10:59:55.833|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 10:59:55.862|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 38.446 seconds (JVM running for 42.424)
2020-07-10 10:59:56.903|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 10:59:56.903|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 10:59:56.918|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 11:04:43.212|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 11:04:44.222|WARN |Apollo-RemoteConfigRepository-1|Apollo-RemoteConfigRepository-1|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 11:04:54.330|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:06:03.204|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 11:06:03.205|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594350363205, current=DOWN, previous=UP]
2020-07-10 11:06:03.205|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:06:03.211|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:06:03.994|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 11:06:03.999|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 11:06:04.015|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 11:06:07.018|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 11:06:07.024|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 11:06:07.042|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 11:06:50.432|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 11:06:50.461|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 11:06:50.649|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 11:06:50.657|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 11:07:10.592|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 11:07:12.835|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 11:07:12.860|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 11:07:13.225|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 11:07:13.306|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 11:07:14.319|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 11:07:14.334|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 11:07:15.354|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 11:07:15.377|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 11:07:16.393|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 11:07:16.394|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 11:07:16.405|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 11:07:17.421|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 11:07:17.421|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 11:07:17.614|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.getProperty() 95|Could not load config for namespace zuul-config from Apollo, please check whether the configs are released in Apollo! Return default value now!
2020-07-10 11:07:18.748|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 11:07:18.771|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 11:07:18.772|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 11:07:18.773|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 11:07:19.189|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 11:07:19.190|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 8568 ms
2020-07-10 11:07:19.463|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:07:19.465|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:07:19.486|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16df9bde
2020-07-10 11:07:23.940|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 11:07:24.168|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 11:07:24.222|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:07:24.223|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:07:24.525|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 11:07:25.464|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 11:07:26.868|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 11:07:27.087|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 11:07:27.174|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 11:07:27.315|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 11:07:27.315|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 11:07:27.648|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 11:07:27.649|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 11:07:28.244|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:07:29.066|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 11:07:29.066|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 11:07:29.067|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 11:07:29.067|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 11:07:29.067|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 11:07:29.067|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 11:07:29.068|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 11:07:29.460|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 11:07:29.469|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 11:07:29.474|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 11:07:29.484|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594350449481 with initial instances count: 1
2020-07-10 11:07:29.489|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 11:07:29.491|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594350449490, current=UP, previous=STARTING]
2020-07-10 11:07:29.495|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:07:29.502|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 11:07:29.565|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:07:29.570|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 11:07:30.114|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 11:07:31.334|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 11:07:31.346|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 11:07:31.410|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 11:07:31.463|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 46.143 seconds (JVM running for 51.218)
2020-07-10 11:07:32.486|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 11:07:32.487|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 11:07:32.503|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 11:08:37.153|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 11:08:37.153|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594350517153, current=DOWN, previous=UP]
2020-07-10 11:08:37.155|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:08:37.161|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:08:38.405|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 11:08:38.413|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 11:08:38.436|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 11:09:01.495|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 11:09:01.508|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 11:09:01.675|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 11:09:01.708|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 11:09:21.288|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 11:09:23.461|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 11:09:23.523|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 11:09:23.887|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 11:09:25.370|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8080 (http)
2020-07-10 11:09:25.391|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8080"]
2020-07-10 11:09:25.392|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 11:09:25.392|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 11:09:25.756|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 11:09:25.756|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4433 ms
2020-07-10 11:09:26.059|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:09:26.061|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:09:26.084|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7d90644f
2020-07-10 11:09:30.750|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 11:09:30.949|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 11:09:31.025|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:09:31.026|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:09:31.410|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 11:09:32.231|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 11:09:33.523|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 11:09:33.672|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 11:09:33.764|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 11:09:33.869|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 11:09:33.869|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 11:09:34.113|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 11:09:34.114|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 11:09:34.733|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:09:35.756|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 11:09:35.756|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 11:09:35.756|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 11:09:35.756|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 11:09:35.757|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 11:09:35.757|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 11:09:35.757|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 11:09:36.138|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 11:09:36.144|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 11:09:36.148|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 11:09:36.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594350576153 with initial instances count: 2
2020-07-10 11:09:36.158|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 11:09:36.158|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594350576158, current=UP, previous=STARTING]
2020-07-10 11:09:36.164|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:09:36.167|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8080"]
2020-07-10 11:09:36.225|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:09:36.225|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8080 (http) with context path ''
2020-07-10 11:09:36.228|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8080
2020-07-10 11:09:37.353|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 11:09:37.363|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 11:09:37.781|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 11:09:37.854|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 42.689 seconds (JVM running for 48.987)
2020-07-10 11:09:39.349|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 11:09:39.350|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 11:09:39.366|INFO |RMI TCP Connection(16)-192.168.106.1|RMI TCP Connection(16)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 16 ms
2020-07-10 11:10:10.352|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:10:10.394|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:10:10.398|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 11:10:10.411|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 11:10:10.443|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:10:10.446|INFO |http-nio-8080-exec-1|http-nio-8080-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@d5977f6
2020-07-10 11:10:11.417|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:11:04.505|WARN |http-nio-8080-exec-4|http-nio-8080-exec-4|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 11:12:29.567|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 11:12:29.567|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594350749567, current=DOWN, previous=UP]
2020-07-10 11:12:29.567|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:12:29.568|INFO |Thread-476|Thread-476|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 11:12:29.574|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:12:30.452|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 11:12:30.457|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:12:30.457|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 11:12:30.463|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 11:12:30.479|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 11:12:33.501|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 11:12:33.507|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 11:12:33.521|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 11:12:58.364|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 11:12:58.374|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 11:12:58.434|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 11:12:58.439|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 11:13:17.674|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 11:13:19.307|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 11:13:19.327|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 11:13:19.528|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 11:13:20.295|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8001 (http)
2020-07-10 11:13:20.325|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8001"]
2020-07-10 11:13:20.332|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 11:13:20.333|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 11:13:20.662|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 11:13:20.662|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2965 ms
2020-07-10 11:13:20.866|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:13:20.868|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:13:20.883|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7221539
2020-07-10 11:13:24.245|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 11:13:24.355|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 11:13:24.392|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:13:24.392|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:13:24.577|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 11:13:25.343|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 11:13:26.468|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 11:13:26.565|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 11:13:26.611|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 11:13:26.709|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 11:13:26.710|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 11:13:27.243|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 11:13:27.244|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 11:13:27.560|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:13:28.142|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 11:13:28.143|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 11:13:28.143|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 11:13:28.143|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 11:13:28.144|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 11:13:28.144|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 11:13:28.144|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 11:13:28.371|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 11:13:28.375|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 11:13:28.379|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 11:13:28.384|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594350808382 with initial instances count: 1
2020-07-10 11:13:28.386|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 11:13:28.387|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594350808387, current=UP, previous=STARTING]
2020-07-10 11:13:28.390|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:13:28.392|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8001"]
2020-07-10 11:13:28.706|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8001 (http) with context path ''
2020-07-10 11:13:28.707|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8001
2020-07-10 11:13:28.712|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:13:29.613|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 11:13:29.621|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 11:13:29.657|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 11:13:29.691|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 35.0 seconds (JVM running for 39.184)
2020-07-10 11:13:31.111|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 11:13:31.111|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 11:13:31.142|INFO |RMI TCP Connection(18)-192.168.106.1|RMI TCP Connection(18)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 29 ms
2020-07-10 11:13:57.107|INFO |http-nio-8001-exec-1|http-nio-8001-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:13:57.123|INFO |http-nio-8001-exec-1|http-nio-8001-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:13:57.124|INFO |http-nio-8001-exec-1|http-nio-8001-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 11:13:57.132|INFO |http-nio-8001-exec-1|http-nio-8001-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 11:13:57.150|INFO |http-nio-8001-exec-1|http-nio-8001-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:13:57.152|INFO |http-nio-8001-exec-1|http-nio-8001-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1b15023f
2020-07-10 11:13:58.137|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:16:49.871|INFO |Thread-466|Thread-466|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 11:16:49.873|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 11:16:49.873|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594351009873, current=DOWN, previous=UP]
2020-07-10 11:16:49.874|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:16:49.879|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:16:50.462|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 11:16:50.466|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:16:50.466|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 11:16:50.475|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 11:16:50.491|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 11:16:53.493|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 11:16:53.497|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 11:16:53.509|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 11:17:06.454|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 11:17:06.463|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 11:17:06.521|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 11:17:06.527|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 11:17:28.871|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 11:17:31.648|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 11:17:31.666|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 11:17:31.869|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 11:17:32.622|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8002 (http)
2020-07-10 11:17:32.633|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8002"]
2020-07-10 11:17:32.634|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 11:17:32.634|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 11:17:32.843|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 11:17:32.843|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3939 ms
2020-07-10 11:17:32.995|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:17:32.996|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:17:33.011|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@17d816b3
2020-07-10 11:17:35.682|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 11:17:35.839|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 11:17:35.870|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:17:35.870|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:17:36.010|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 11:17:36.494|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 11:17:37.459|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 11:17:37.558|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 11:17:37.601|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 11:17:37.670|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 11:17:37.671|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 11:17:37.868|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 11:17:37.868|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 11:17:38.188|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:17:38.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 11:17:38.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 11:17:38.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 11:17:38.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 11:17:38.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 11:17:38.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 11:17:38.726|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 11:17:38.912|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 11:17:38.916|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 11:17:38.919|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 11:17:38.924|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594351058922 with initial instances count: 1
2020-07-10 11:17:38.927|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 11:17:38.928|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594351058928, current=UP, previous=STARTING]
2020-07-10 11:17:38.931|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:17:38.934|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8002"]
2020-07-10 11:17:38.980|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8002 (http) with context path ''
2020-07-10 11:17:38.982|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8002
2020-07-10 11:17:39.367|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:17:40.062|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 11:17:40.072|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 11:17:40.138|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 11:17:40.203|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 37.103 seconds (JVM running for 41.187)
2020-07-10 11:17:41.582|INFO |RMI TCP Connection(12)-192.168.106.1|RMI TCP Connection(12)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 11:17:41.582|INFO |RMI TCP Connection(12)-192.168.106.1|RMI TCP Connection(12)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 11:17:41.594|INFO |RMI TCP Connection(12)-192.168.106.1|RMI TCP Connection(12)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 12 ms
2020-07-10 11:18:05.816|INFO |http-nio-8002-exec-1|http-nio-8002-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:18:05.833|INFO |http-nio-8002-exec-1|http-nio-8002-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:18:05.834|INFO |http-nio-8002-exec-1|http-nio-8002-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 11:18:05.841|INFO |http-nio-8002-exec-1|http-nio-8002-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 11:18:05.862|INFO |http-nio-8002-exec-1|http-nio-8002-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:18:05.865|INFO |http-nio-8002-exec-1|http-nio-8002-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@13830449
2020-07-10 11:18:06.845|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:22:14.015|INFO |Thread-476|Thread-476|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 11:22:14.016|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 11:22:14.016|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594351334016, current=DOWN, previous=UP]
2020-07-10 11:22:14.017|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:22:14.023|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:22:14.624|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 11:22:14.627|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:22:14.628|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 11:22:14.637|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 11:22:14.651|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 11:22:17.654|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 11:22:17.663|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 11:22:17.675|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 11:22:31.816|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 93|App ID is set to zuul-config by app.id property from /META-INF/app.properties
2020-07-10 11:22:31.826|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 11:22:31.882|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 11:22:31.886|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 11:22:50.946|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 11:22:52.752|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 11:22:52.772|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 11:22:53.005|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=926a1e89-f5e8-33cb-9d4b-0518ebe5a969
2020-07-10 11:22:53.762|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8003 (http)
2020-07-10 11:22:53.776|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8003"]
2020-07-10 11:22:53.776|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 11:22:53.776|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 11:22:53.976|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 11:22:53.976|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3008 ms
2020-07-10 11:22:54.145|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:22:54.147|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:22:54.162|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@67b8d45
2020-07-10 11:22:56.864|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 11:22:56.944|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 11:22:56.971|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:22:56.971|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:22:57.108|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 11:22:57.561|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 11:23:00.223|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 11:23:00.615|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 11:23:00.728|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 11:23:00.905|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 11:23:00.905|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 11:23:01.262|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 11:23:01.263|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 11:23:01.657|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:23:02.353|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 11:23:02.353|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 11:23:02.353|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 11:23:02.354|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 11:23:02.354|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 11:23:02.355|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 11:23:02.355|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 11:23:02.596|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 11:23:02.600|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 11:23:02.604|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 11:23:02.608|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594351382607 with initial instances count: 1
2020-07-10 11:23:02.613|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 11:23:02.614|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594351382614, current=UP, previous=STARTING]
2020-07-10 11:23:02.617|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:23:02.620|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8003"]
2020-07-10 11:23:02.728|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8003 (http) with context path ''
2020-07-10 11:23:02.729|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:23:02.730|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8003
2020-07-10 11:23:03.626|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 11:23:03.633|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 11:23:03.665|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 11:23:03.694|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 35.129 seconds (JVM running for 38.601)
2020-07-10 11:23:05.435|INFO |RMI TCP Connection(6)-192.168.106.1|RMI TCP Connection(6)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 11:23:05.436|INFO |RMI TCP Connection(6)-192.168.106.1|RMI TCP Connection(6)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 11:23:05.452|INFO |RMI TCP Connection(6)-192.168.106.1|RMI TCP Connection(6)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 11:23:40.417|INFO |http-nio-8003-exec-1|http-nio-8003-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:23:40.433|INFO |http-nio-8003-exec-1|http-nio-8003-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:23:40.434|INFO |http-nio-8003-exec-1|http-nio-8003-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 11:23:40.443|INFO |http-nio-8003-exec-1|http-nio-8003-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 11:23:40.462|INFO |http-nio-8003-exec-1|http-nio-8003-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:23:40.464|INFO |http-nio-8003-exec-1|http-nio-8003-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2a529ba6
2020-07-10 11:23:41.448|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:35:47.579|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 1 seconds. appId: zuul-config, cluster: default, namespaces: application, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=zuul-config&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A44%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-10 11:35:48.580|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 2 seconds. appId: zuul-config, cluster: default, namespaces: application, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=zuul-config&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A44%7D%5D, reason: Could not complete get operation [Cause: No route to host: connect]
2020-07-10 11:35:50.588|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 4 seconds. appId: zuul-config, cluster: default, namespaces: application, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=zuul-config&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A44%7D%5D, reason: Could not complete get operation [Cause: No route to host: connect]
2020-07-10 11:35:55.589|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 8 seconds. appId: zuul-config, cluster: default, namespaces: application, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=zuul-config&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A44%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-10 11:37:22.901|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:37:36.023|INFO |Thread-479|Thread-479|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 11:37:36.024|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 11:37:36.024|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594352256024, current=DOWN, previous=UP]
2020-07-10 11:37:36.024|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:37:36.030|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:37:36.645|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 11:37:36.648|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:37:36.648|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 11:37:36.655|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 11:37:36.668|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 11:37:39.671|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 11:37:39.676|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 11:37:39.686|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 11:37:54.726|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 11:37:54.739|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 11:37:54.810|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 11:37:54.819|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 11:38:16.018|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 11:38:18.092|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 11:38:18.113|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 11:38:18.346|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=926a1e89-f5e8-33cb-9d4b-0518ebe5a969
2020-07-10 11:38:19.679|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8004 (http)
2020-07-10 11:38:19.698|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8004"]
2020-07-10 11:38:19.698|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 11:38:19.699|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 11:38:19.961|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 11:38:19.961|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3911 ms
2020-07-10 11:38:20.117|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:38:20.118|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:38:20.131|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2f9addd4
2020-07-10 11:38:23.047|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 11:38:23.149|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 11:38:23.183|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 11:38:23.184|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 11:38:23.399|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 11:38:24.119|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 11:38:25.109|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 11:38:25.207|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 11:38:25.254|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 11:38:25.325|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 11:38:25.325|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 11:38:25.498|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 11:38:25.499|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 11:38:25.782|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 11:38:26.444|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 11:38:26.444|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 11:38:26.444|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 11:38:26.444|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 11:38:26.444|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 11:38:26.444|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 11:38:26.445|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 11:38:26.650|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 11:38:26.653|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 11:38:26.657|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 11:38:26.664|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594352306661 with initial instances count: 1
2020-07-10 11:38:26.667|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 11:38:26.669|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594352306668, current=UP, previous=STARTING]
2020-07-10 11:38:26.672|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 11:38:26.676|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8004"]
2020-07-10 11:38:27.127|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8004 (http) with context path ''
2020-07-10 11:38:27.130|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8004
2020-07-10 11:38:27.138|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 11:38:28.981|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 11:38:28.993|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 11:38:29.048|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 11:38:29.093|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 37.64 seconds (JVM running for 41.777)
2020-07-10 11:38:30.072|INFO |RMI TCP Connection(19)-192.168.106.1|RMI TCP Connection(19)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 11:38:30.073|INFO |RMI TCP Connection(19)-192.168.106.1|RMI TCP Connection(19)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 11:38:30.091|INFO |RMI TCP Connection(19)-192.168.106.1|RMI TCP Connection(19)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 17 ms
2020-07-10 11:38:49.859|INFO |http-nio-8004-exec-1|http-nio-8004-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:38:49.878|INFO |http-nio-8004-exec-1|http-nio-8004-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 11:38:49.880|INFO |http-nio-8004-exec-1|http-nio-8004-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 11:38:49.891|INFO |http-nio-8004-exec-1|http-nio-8004-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 11:38:49.916|INFO |http-nio-8004-exec-1|http-nio-8004-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:38:49.922|INFO |http-nio-8004-exec-1|http-nio-8004-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5e81add4
2020-07-10 11:38:50.896|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 11:40:43.578|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 1 seconds. appId: zuul-config, cluster: default, namespaces: application, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=zuul-config&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A45%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-10 12:05:41.495|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 2 seconds. appId: zuul-config, cluster: default, namespaces: application, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=zuul-config&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A45%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-10 12:05:44.496|WARN |Apollo-RemoteConfigLongPollService-1|Apollo-RemoteConfigLongPollService-1|com.ctrip.framework.apollo.internals.RemoteConfigLongPollService.doLongPollingRefresh() 193|Long polling failed, will retry in 4 seconds. appId: zuul-config, cluster: default, namespaces: application, long polling url: http://192.168.106.129:8080/notifications/v2?cluster=default&appId=zuul-config&ip=192.168.101.139&notifications=%5B%7B%22namespaceName%22%3A%22application%22%2C%22notificationId%22%3A45%7D%5D, reason: Could not complete get operation [Cause: connect timed out]
2020-07-10 12:08:22.363|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:13:22.364|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:18:22.365|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:19:22.206|INFO |Thread-471|Thread-471|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 12:19:22.207|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 12:19:22.208|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594354762207, current=DOWN, previous=UP]
2020-07-10 12:19:22.208|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:19:22.215|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:19:22.853|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 12:19:22.857|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:19:22.857|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 12:19:22.865|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 12:19:22.895|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 12:19:25.896|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 12:19:25.902|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 12:19:25.916|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 12:19:38.135|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 12:19:38.145|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 12:19:38.198|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 12:19:38.203|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 12:19:39.190|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 12:19:41.680|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 12:19:41.703|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 12:19:41.933|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=926a1e89-f5e8-33cb-9d4b-0518ebe5a969
2020-07-10 12:19:42.663|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8006 (http)
2020-07-10 12:19:42.675|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8006"]
2020-07-10 12:19:42.676|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 12:19:42.676|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 12:19:42.888|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 12:19:42.888|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3667 ms
2020-07-10 12:19:43.027|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:19:43.029|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:19:43.042|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7ab1ad9
2020-07-10 12:19:45.927|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 12:19:46.040|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 12:19:46.081|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:19:46.081|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:19:46.280|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 12:19:46.828|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 12:19:47.784|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 12:19:47.879|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 12:19:47.924|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 12:19:47.997|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 12:19:47.998|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 12:19:48.182|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 12:19:48.182|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 12:19:48.472|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:19:49.057|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 12:19:49.057|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 12:19:49.057|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 12:19:49.057|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 12:19:49.057|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 12:19:49.058|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 12:19:49.058|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 12:19:49.271|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 12:19:49.275|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 12:19:49.281|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 12:19:49.287|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594354789285 with initial instances count: 1
2020-07-10 12:19:49.290|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 12:19:49.291|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594354789290, current=UP, previous=STARTING]
2020-07-10 12:19:49.295|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:19:49.298|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8006"]
2020-07-10 12:19:49.626|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:19:49.627|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8006 (http) with context path ''
2020-07-10 12:19:49.629|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8006
2020-07-10 12:19:50.504|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 12:19:50.511|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 12:19:50.545|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 12:19:50.574|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 15.556 seconds (JVM running for 19.964)
2020-07-10 12:19:52.443|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 12:19:52.444|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 12:19:52.461|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 17 ms
2020-07-10 12:20:38.291|INFO |http-nio-8006-exec-1|http-nio-8006-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:20:38.307|INFO |http-nio-8006-exec-1|http-nio-8006-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:20:38.308|INFO |http-nio-8006-exec-1|http-nio-8006-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 12:20:38.317|INFO |http-nio-8006-exec-1|http-nio-8006-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 12:20:38.335|INFO |http-nio-8006-exec-1|http-nio-8006-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:20:38.337|INFO |http-nio-8006-exec-1|http-nio-8006-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@584172aa
2020-07-10 12:20:39.322|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:24:49.063|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:25:08.312|INFO |Thread-441|Thread-441|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 12:25:08.315|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 12:25:08.315|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594355108315, current=DOWN, previous=UP]
2020-07-10 12:25:08.315|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:25:08.344|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:25:09.119|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 12:25:09.124|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:25:09.124|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 12:25:09.132|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 12:25:09.145|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 12:25:12.147|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 12:25:12.153|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 12:25:12.165|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 12:25:28.074|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 12:25:28.088|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 12:25:28.170|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 12:25:28.174|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 12:25:29.181|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 12:25:31.303|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 12:25:31.325|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 12:25:31.577|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 12:25:32.360|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8007 (http)
2020-07-10 12:25:32.371|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8007"]
2020-07-10 12:25:32.371|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 12:25:32.372|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 12:25:32.568|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 12:25:32.568|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3364 ms
2020-07-10 12:25:32.706|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:25:32.707|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:25:32.718|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@38cf3ae1
2020-07-10 12:25:35.665|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 12:25:35.772|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 12:25:35.816|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:25:35.816|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:25:36.038|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 12:25:36.716|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 12:25:37.672|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 12:25:37.761|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 12:25:37.804|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 12:25:37.873|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 12:25:37.873|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 12:25:38.039|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 12:25:38.040|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 12:25:38.302|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:25:38.892|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 12:25:38.892|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 12:25:38.892|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 12:25:38.892|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 12:25:38.893|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 12:25:38.893|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 12:25:38.893|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 12:25:39.092|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 12:25:39.098|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 12:25:39.103|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 12:25:39.112|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594355139109 with initial instances count: 1
2020-07-10 12:25:39.116|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 12:25:39.117|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594355139117, current=UP, previous=STARTING]
2020-07-10 12:25:39.121|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:25:39.126|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8007"]
2020-07-10 12:25:39.601|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8007 (http) with context path ''
2020-07-10 12:25:39.603|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8007
2020-07-10 12:25:39.615|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:25:40.624|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 12:25:40.631|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 12:25:40.668|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 12:25:40.700|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 16.818 seconds (JVM running for 20.643)
2020-07-10 12:25:41.187|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 12:25:41.188|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 12:25:41.201|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 13 ms
2020-07-10 12:27:48.626|INFO |http-nio-8007-exec-1|http-nio-8007-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:27:48.642|INFO |http-nio-8007-exec-1|http-nio-8007-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:27:48.644|INFO |http-nio-8007-exec-1|http-nio-8007-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 12:27:48.652|INFO |http-nio-8007-exec-1|http-nio-8007-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 12:27:48.684|INFO |http-nio-8007-exec-1|http-nio-8007-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:27:48.696|INFO |http-nio-8007-exec-1|http-nio-8007-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6eaca33f
2020-07-10 12:27:49.661|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:29:39.369|INFO |Thread-441|Thread-441|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 12:29:39.370|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 12:29:39.370|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594355379370, current=DOWN, previous=UP]
2020-07-10 12:29:39.371|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:29:39.376|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:29:40.352|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 12:29:40.356|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:29:40.356|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 12:29:40.364|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 12:29:40.384|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 12:29:43.386|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 12:29:43.392|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 12:29:43.405|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 12:30:01.289|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 12:30:01.300|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 12:30:01.360|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 12:30:01.365|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 12:30:02.433|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 12:30:03.964|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 12:30:03.984|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 12:30:04.181|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 12:30:04.997|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8008 (http)
2020-07-10 12:30:05.012|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8008"]
2020-07-10 12:30:05.012|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 12:30:05.013|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 12:30:05.223|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 12:30:05.223|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2761 ms
2020-07-10 12:30:05.397|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:30:05.399|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:30:05.414|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a70575
2020-07-10 12:30:07.862|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 12:30:08.874|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 12:30:08.886|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 12:30:09.896|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 12:30:09.905|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 12:30:10.913|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 12:30:10.914|WARN |main|main|com.ctrip.framework.apollo.internals.AbstractConfigRepository.trySync() 26|Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties]
2020-07-10 12:30:10.927|WARN |main|main|com.ctrip.framework.apollo.internals.RemoteConfigRepository.loadApolloConfig() 194|Load config failed, will retry in 1 SECONDS. appId: zuul-config, cluster: default, namespaces: zuul-config
2020-07-10 12:30:11.939|WARN |main|main|com.ctrip.framework.apollo.internals.LocalFileConfigRepository.trySyncFromUpstream() 167|Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: zuul-config, cluster: default, namespace: zuul-config, url: http://192.168.106.129:8080/configs/zuul-config/default/zuul-config?ip=192.168.101.139 [Cause: [status code: 404] Could not find config for namespace - appId: zuul-config, cluster: default, namespace: zuul-config, please check whether the configs are released in Apollo!]
2020-07-10 12:30:11.940|WARN |main|main|com.ctrip.framework.apollo.internals.DefaultConfig.initialize() 61|Init Apollo Local Config failed - namespace: zuul-config, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\zuul-config\config-cache\zuul-config+default+zuul-config.properties].
2020-07-10 12:30:12.469|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 12:30:12.603|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 12:30:12.631|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:30:12.631|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:30:12.783|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 12:30:13.287|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 12:30:14.193|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 12:30:14.285|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 12:30:14.330|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 12:30:14.416|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 12:30:14.416|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 12:30:14.588|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 12:30:14.588|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 12:30:14.861|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:30:15.452|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 12:30:15.452|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 12:30:15.452|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 12:30:15.452|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 12:30:15.452|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 12:30:15.453|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 12:30:15.453|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 12:30:15.653|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 12:30:15.658|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 12:30:15.662|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 12:30:15.667|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594355415665 with initial instances count: 1
2020-07-10 12:30:15.670|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 12:30:15.671|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594355415671, current=UP, previous=STARTING]
2020-07-10 12:30:15.678|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:30:15.683|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8008"]
2020-07-10 12:30:15.747|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:30:15.756|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8008 (http) with context path ''
2020-07-10 12:30:15.758|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8008
2020-07-10 12:30:16.889|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 12:30:17.239|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 12:30:17.287|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 12:30:17.340|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 20.035 seconds (JVM running for 24.288)
2020-07-10 12:30:18.030|INFO |RMI TCP Connection(12)-192.168.106.1|RMI TCP Connection(12)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 12:30:18.030|INFO |RMI TCP Connection(12)-192.168.106.1|RMI TCP Connection(12)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 12:30:18.047|INFO |RMI TCP Connection(12)-192.168.106.1|RMI TCP Connection(12)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 17 ms
2020-07-10 12:30:21.466|INFO |http-nio-8008-exec-1|http-nio-8008-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:30:21.487|INFO |http-nio-8008-exec-1|http-nio-8008-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:30:21.489|INFO |http-nio-8008-exec-1|http-nio-8008-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 12:30:21.506|INFO |http-nio-8008-exec-1|http-nio-8008-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 12:30:21.569|INFO |http-nio-8008-exec-1|http-nio-8008-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:30:21.579|INFO |http-nio-8008-exec-1|http-nio-8008-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@21862d00
2020-07-10 12:30:22.525|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:31:47.634|INFO |Thread-443|Thread-443|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 12:31:47.635|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 12:31:47.635|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594355507635, current=DOWN, previous=UP]
2020-07-10 12:31:47.637|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:31:47.644|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:31:48.378|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 12:31:48.392|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:31:48.393|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 12:31:48.417|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 12:31:48.454|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 12:31:51.458|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 12:31:51.465|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 12:31:51.476|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 12:37:56.900|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 12:37:56.912|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 12:37:56.966|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 12:37:56.971|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 12:37:58.037|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 12:37:59.980|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 12:38:00.007|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 12:38:00.288|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 12:38:01.768|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8009 (http)
2020-07-10 12:38:01.787|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8009"]
2020-07-10 12:38:01.788|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 12:38:01.788|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 12:38:02.055|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 12:38:02.055|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3994 ms
2020-07-10 12:38:02.196|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:38:02.197|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:38:02.208|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@126675fd
2020-07-10 12:38:05.752|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 12:38:05.849|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 12:38:05.874|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:38:05.874|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:38:06.019|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 12:38:06.539|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 12:38:07.432|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 12:38:07.527|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 12:38:07.569|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 12:38:07.633|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 12:38:07.633|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 12:38:07.799|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 12:38:07.799|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 12:38:08.132|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:38:08.825|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 12:38:08.826|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 12:38:08.826|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 12:38:08.826|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 12:38:08.826|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 12:38:08.827|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 12:38:08.827|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 12:38:09.065|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 12:38:09.069|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 12:38:09.073|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 12:38:09.078|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594355889076 with initial instances count: 1
2020-07-10 12:38:09.081|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 12:38:09.081|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594355889081, current=UP, previous=STARTING]
2020-07-10 12:38:09.085|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:38:09.087|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8009"]
2020-07-10 12:38:09.400|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8009 (http) with context path ''
2020-07-10 12:38:09.402|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8009
2020-07-10 12:38:09.406|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:38:10.320|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 12:38:10.328|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 12:38:10.364|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 12:38:10.394|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 17.055 seconds (JVM running for 20.895)
2020-07-10 12:38:11.526|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 12:38:11.526|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 12:38:11.542|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 12:38:20.961|INFO |http-nio-8009-exec-1|http-nio-8009-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:38:20.976|INFO |http-nio-8009-exec-1|http-nio-8009-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:38:20.977|INFO |http-nio-8009-exec-1|http-nio-8009-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 12:38:20.985|INFO |http-nio-8009-exec-1|http-nio-8009-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 12:38:21.004|INFO |http-nio-8009-exec-1|http-nio-8009-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:38:21.007|INFO |http-nio-8009-exec-1|http-nio-8009-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1385646a
2020-07-10 12:38:21.990|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:39:12.125|INFO |Apollo-Config-2|Apollo-Config-2|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|Found ==========================  change - ConfigChange{namespace='application', propertyName='server.port', oldValue='8009', newValue='8010', changeType=MODIFIED}
2020-07-10 12:42:11.422|INFO |Thread-440|Thread-440|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 12:42:11.424|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 12:42:11.424|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594356131424, current=DOWN, previous=UP]
2020-07-10 12:42:11.425|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:42:11.431|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:42:12.115|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 12:42:12.119|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:42:12.119|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 12:42:12.127|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 12:42:12.144|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 12:42:15.146|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 12:42:15.153|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 12:42:15.165|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 12:42:31.192|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 12:42:31.205|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 108|Environment is set to [DEV] by JVM system property 'env'.
2020-07-10 12:42:31.255|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 12:42:31.260|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 12:42:32.202|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 12:42:34.103|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 12:42:34.136|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 12:42:34.387|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 12:42:35.260|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8010 (http)
2020-07-10 12:42:35.274|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8010"]
2020-07-10 12:42:35.274|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 12:42:35.274|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 12:42:35.513|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 12:42:35.513|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3287 ms
2020-07-10 12:42:35.682|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:42:35.683|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:42:35.698|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@702f4124
2020-07-10 12:42:39.420|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 12:42:39.549|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 12:42:39.641|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 12:42:39.642|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 12:42:39.908|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 12:42:40.511|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 12:42:41.520|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 12:42:41.665|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 12:42:41.734|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 12:42:41.825|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 12:42:41.825|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 12:42:42.057|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 12:42:42.057|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 12:42:42.474|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:42:43.267|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 12:42:43.268|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 12:42:43.268|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 12:42:43.268|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 12:42:43.268|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 12:42:43.268|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 12:42:43.268|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 12:42:43.537|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 12:42:43.542|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 12:42:43.548|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 12:42:43.554|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594356163553 with initial instances count: 1
2020-07-10 12:42:43.557|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 12:42:43.558|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594356163558, current=UP, previous=STARTING]
2020-07-10 12:42:43.561|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:42:43.563|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8010"]
2020-07-10 12:42:43.608|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8010 (http) with context path ''
2020-07-10 12:42:43.610|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8010
2020-07-10 12:42:43.611|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:42:44.588|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 12:42:44.597|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 12:42:44.939|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 12:42:44.980|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 17.305 seconds (JVM running for 20.875)
2020-07-10 12:42:46.810|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 12:42:46.810|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 12:42:46.824|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 13 ms
2020-07-10 12:43:11.847|INFO |Apollo-Config-2|Apollo-Config-2|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|Found ==========================  change - ConfigChange{namespace='application', propertyName='server.port', oldValue='8010', newValue='8011', changeType=MODIFIED}
2020-07-10 12:44:21.746|INFO |http-nio-8010-exec-1|http-nio-8010-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:44:21.761|INFO |http-nio-8010-exec-1|http-nio-8010-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:44:21.762|INFO |http-nio-8010-exec-1|http-nio-8010-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 12:44:21.768|INFO |http-nio-8010-exec-1|http-nio-8010-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 12:44:21.787|INFO |http-nio-8010-exec-1|http-nio-8010-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:44:21.789|INFO |http-nio-8010-exec-1|http-nio-8010-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2a5fa135
2020-07-10 12:44:22.773|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 12:47:43.274|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 12:51:33.025|INFO |Thread-441|Thread-441|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 12:51:33.026|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 12:51:33.026|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594356693026, current=DOWN, previous=UP]
2020-07-10 12:51:33.026|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 12:51:33.034|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 12:51:33.608|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 12:51:33.618|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 12:51:33.618|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 12:51:33.626|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 12:51:33.639|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 12:51:36.642|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 12:51:36.646|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 12:51:36.659|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 13:01:50.555|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 13:01:50.567|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 13:01:50.616|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 13:01:50.620|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 13:01:51.646|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 13:01:53.385|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 13:01:53.411|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 13:01:53.725|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 13:01:54.699|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8011 (http)
2020-07-10 13:01:54.712|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8011"]
2020-07-10 13:01:54.713|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 13:01:54.713|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 13:01:54.907|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 13:01:54.908|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3235 ms
2020-07-10 13:01:55.050|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:01:55.051|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:01:55.063|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@17d816b3
2020-07-10 13:01:57.784|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 13:01:57.909|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 13:01:57.935|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:01:57.936|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:01:58.094|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 13:01:58.804|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 13:01:59.822|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 13:01:59.913|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 13:01:59.959|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 13:02:00.040|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 13:02:00.040|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 13:02:00.212|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 13:02:00.212|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 13:02:00.496|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 13:02:01.101|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 13:02:01.101|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 13:02:01.102|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 13:02:01.102|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 13:02:01.102|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 13:02:01.102|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 13:02:01.102|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 13:02:01.302|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 13:02:01.306|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 13:02:01.309|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 13:02:01.314|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594357321313 with initial instances count: 1
2020-07-10 13:02:01.318|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 13:02:01.319|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594357321319, current=UP, previous=STARTING]
2020-07-10 13:02:01.322|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:02:01.326|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8011"]
2020-07-10 13:02:01.664|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8011 (http) with context path ''
2020-07-10 13:02:01.666|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8011
2020-07-10 13:02:01.671|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:02:02.567|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 13:02:02.574|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 13:02:02.607|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 13:02:02.637|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 15.513 seconds (JVM running for 19.119)
2020-07-10 13:02:02.849|INFO |RMI TCP Connection(6)-192.168.106.1|RMI TCP Connection(6)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 13:02:02.849|INFO |RMI TCP Connection(6)-192.168.106.1|RMI TCP Connection(6)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 13:02:02.861|INFO |RMI TCP Connection(6)-192.168.106.1|RMI TCP Connection(6)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 12 ms
2020-07-10 13:04:47.678|INFO |http-nio-8011-exec-1|http-nio-8011-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:04:47.697|INFO |http-nio-8011-exec-1|http-nio-8011-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 13:04:47.702|INFO |http-nio-8011-exec-1|http-nio-8011-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 13:04:47.714|INFO |http-nio-8011-exec-1|http-nio-8011-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 13:04:47.745|INFO |http-nio-8011-exec-1|http-nio-8011-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:04:47.749|INFO |http-nio-8011-exec-1|http-nio-8011-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@797b356b
2020-07-10 13:04:48.718|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:05:08.892|INFO |Apollo-Config-2|Apollo-Config-2|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|Found ==========================  change - ConfigChange{namespace='application', propertyName='server.port', oldValue='8011', newValue='8012', changeType=MODIFIED}
2020-07-10 13:07:01.106|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 13:12:01.107|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 13:15:57.492|INFO |Apollo-Config-3|Apollo-Config-3|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|Found ==========================  change - ConfigChange{namespace='application', propertyName='zuul.routes.eureka-provider-demo-my.path', oldValue='/provider/**', newValue='/provider22/**', changeType=MODIFIED}
2020-07-10 13:16:04.916|WARN |http-nio-8011-exec-10|http-nio-8011-exec-10|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:16:54.783|INFO |Thread-441|Thread-441|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 13:16:54.784|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 13:16:54.784|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594358214784, current=DOWN, previous=UP]
2020-07-10 13:16:54.785|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:16:54.795|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:16:55.534|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 13:16:55.538|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 13:16:55.539|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 13:16:55.567|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 13:16:55.611|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 13:16:58.614|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 13:16:58.619|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 13:16:58.631|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 13:17:37.174|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 13:17:37.185|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 13:17:37.241|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 13:17:37.247|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 13:17:38.224|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 13:17:40.264|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 13:17:40.288|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 13:17:40.587|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=926a1e89-f5e8-33cb-9d4b-0518ebe5a969
2020-07-10 13:17:41.416|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8012 (http)
2020-07-10 13:17:41.433|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8012"]
2020-07-10 13:17:41.433|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 13:17:41.434|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 13:17:41.689|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 13:17:41.690|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3431 ms
2020-07-10 13:17:41.829|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:17:41.830|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:17:41.843|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3cf8a235
2020-07-10 13:17:44.714|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 13:17:44.838|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 13:17:44.872|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:17:44.872|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:17:45.059|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 13:17:45.625|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 13:17:46.600|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 13:17:46.698|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 13:17:46.744|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 13:17:46.817|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 13:17:46.817|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 13:17:47.020|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 13:17:47.020|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 13:17:47.287|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 13:17:47.888|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 13:17:47.888|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 13:17:47.889|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 13:17:47.889|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 13:17:47.889|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 13:17:47.890|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 13:17:47.890|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 13:17:48.110|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 13:17:48.114|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 13:17:48.118|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 13:17:48.124|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594358268121 with initial instances count: 1
2020-07-10 13:17:48.126|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 13:17:48.127|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594358268126, current=UP, previous=STARTING]
2020-07-10 13:17:48.129|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:17:48.132|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8012"]
2020-07-10 13:17:48.453|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:17:48.455|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8012 (http) with context path ''
2020-07-10 13:17:48.456|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8012
2020-07-10 13:17:49.416|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 13:17:49.428|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 13:17:49.493|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 13:17:49.578|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 15.534 seconds (JVM running for 19.286)
2020-07-10 13:17:51.737|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 13:17:51.738|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 13:17:51.751|INFO |RMI TCP Connection(8)-192.168.106.1|RMI TCP Connection(8)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 13 ms
2020-07-10 13:19:23.662|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 13:19:23.662|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594358363662, current=DOWN, previous=UP]
2020-07-10 13:19:23.663|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:19:23.673|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:19:24.334|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 13:19:24.338|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 13:19:24.351|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 13:19:27.353|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 13:19:27.359|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 13:19:27.370|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 13:19:43.001|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 13:19:43.011|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 13:19:43.087|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 13:19:43.093|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 13:19:44.121|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 13:19:46.950|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 13:19:46.974|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 13:19:47.240|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=926a1e89-f5e8-33cb-9d4b-0518ebe5a969
2020-07-10 13:19:48.109|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8012 (http)
2020-07-10 13:19:48.125|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8012"]
2020-07-10 13:19:48.126|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 13:19:48.126|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 13:19:48.326|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 13:19:48.326|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4170 ms
2020-07-10 13:19:48.473|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:19:48.474|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:19:48.487|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@126a9a3d
2020-07-10 13:19:51.552|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 13:19:51.635|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 13:19:51.663|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:19:51.663|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:19:51.852|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 13:19:52.457|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 13:19:53.455|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 13:19:53.548|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 13:19:53.595|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 13:19:53.667|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 13:19:53.668|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 13:19:53.841|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 13:19:53.841|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 13:19:54.153|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 13:19:54.808|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 13:19:54.808|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 13:19:54.809|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 13:19:54.809|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 13:19:54.809|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 13:19:54.810|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 13:19:54.810|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 13:19:55.063|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 13:19:55.067|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 13:19:55.072|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 13:19:55.082|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594358395078 with initial instances count: 1
2020-07-10 13:19:55.087|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 13:19:55.089|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594358395089, current=UP, previous=STARTING]
2020-07-10 13:19:55.100|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:19:55.104|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8012"]
2020-07-10 13:19:55.480|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8012 (http) with context path ''
2020-07-10 13:19:55.483|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8012
2020-07-10 13:19:55.490|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:19:56.499|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 13:19:56.506|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 13:19:56.545|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 13:19:56.577|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 17.779 seconds (JVM running for 21.682)
2020-07-10 13:19:57.385|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 13:19:57.386|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 13:19:57.401|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 13:20:43.124|INFO |http-nio-8012-exec-2|http-nio-8012-exec-2|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:20:43.141|INFO |http-nio-8012-exec-2|http-nio-8012-exec-2|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 13:20:43.142|INFO |http-nio-8012-exec-2|http-nio-8012-exec-2|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 13:20:43.151|INFO |http-nio-8012-exec-2|http-nio-8012-exec-2|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 13:20:43.171|INFO |http-nio-8012-exec-2|http-nio-8012-exec-2|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:20:43.173|INFO |http-nio-8012-exec-2|http-nio-8012-exec-2|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@22be9092
2020-07-10 13:20:44.155|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:22:22.162|INFO |Thread-437|Thread-437|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 13:22:22.162|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 13:22:22.163|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594358542163, current=DOWN, previous=UP]
2020-07-10 13:22:22.164|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:22:22.169|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:22:23.029|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 13:22:23.032|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 13:22:23.032|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 13:22:23.041|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 13:22:23.057|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 13:22:26.058|WARN |DiscoveryClient-1|DiscoveryClient-1|com.netflix.discovery.TimedSupervisorTask.run() 90|task supervisor shutting down, can't accept the task
2020-07-10 13:22:26.058|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 13:22:26.063|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 13:22:26.072|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 13:23:01.895|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 13:23:01.910|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 13:23:02.020|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 13:23:02.029|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 13:23:03.198|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 13:23:04.940|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 13:23:04.962|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 13:23:05.172|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 13:23:06.048|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8012 (http)
2020-07-10 13:23:06.062|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8012"]
2020-07-10 13:23:06.063|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 13:23:06.063|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 13:23:06.321|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 13:23:06.321|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3095 ms
2020-07-10 13:23:06.540|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:23:06.541|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:23:06.556|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4404a6b
2020-07-10 13:23:09.387|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 13:23:09.481|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 13:23:09.514|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 13:23:09.514|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 13:23:09.727|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 13:23:10.302|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 13:23:11.497|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 13:23:11.631|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 13:23:11.703|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 13:23:11.856|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 13:23:11.856|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 13:23:12.096|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 13:23:12.097|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 13:23:12.510|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 13:23:13.137|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 13:23:13.137|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 13:23:13.137|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 13:23:13.137|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 13:23:13.137|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 13:23:13.138|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 13:23:13.138|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 13:23:13.331|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 13:23:13.335|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 13:23:13.338|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 13:23:13.343|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594358593340 with initial instances count: 1
2020-07-10 13:23:13.346|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 13:23:13.346|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594358593346, current=UP, previous=STARTING]
2020-07-10 13:23:13.350|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:23:13.353|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8012"]
2020-07-10 13:23:13.394|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8012 (http) with context path ''
2020-07-10 13:23:13.396|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8012
2020-07-10 13:23:13.399|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:23:14.301|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 13:23:14.307|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 13:23:14.612|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 13:23:14.642|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 15.973 seconds (JVM running for 20.241)
2020-07-10 13:23:15.757|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 13:23:15.758|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 13:23:15.773|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-10 13:23:27.723|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:23:27.740|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 13:23:27.741|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 13:23:27.748|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 13:23:27.769|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:23:27.773|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5506c65e
2020-07-10 13:23:28.752|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 13:23:49.116|INFO |Apollo-Config-2|Apollo-Config-2|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|监听到了配置中心的变化==========================  change - ConfigChange{namespace='application', propertyName='zuul.routes.eureka-provider-demo-my.path', oldValue='/provider/**', newValue='/providerzzz/**', changeType=MODIFIED}
2020-07-10 13:24:38.602|WARN |http-nio-8012-exec-7|http-nio-8012-exec-7|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:47.507|WARN |http-nio-8012-exec-10|http-nio-8012-exec-10|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:48.297|WARN |http-nio-8012-exec-1|http-nio-8012-exec-1|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:48.888|WARN |http-nio-8012-exec-4|http-nio-8012-exec-4|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:49.265|WARN |http-nio-8012-exec-2|http-nio-8012-exec-2|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:49.448|WARN |http-nio-8012-exec-3|http-nio-8012-exec-3|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:49.590|WARN |http-nio-8012-exec-6|http-nio-8012-exec-6|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:49.747|WARN |http-nio-8012-exec-5|http-nio-8012-exec-5|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:49.880|WARN |http-nio-8012-exec-7|http-nio-8012-exec-7|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:50.031|WARN |http-nio-8012-exec-8|http-nio-8012-exec-8|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:50.176|WARN |http-nio-8012-exec-9|http-nio-8012-exec-9|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:50.328|WARN |http-nio-8012-exec-10|http-nio-8012-exec-10|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:50.469|WARN |http-nio-8012-exec-1|http-nio-8012-exec-1|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:50.727|WARN |http-nio-8012-exec-4|http-nio-8012-exec-4|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:50.887|WARN |http-nio-8012-exec-2|http-nio-8012-exec-2|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:51.053|WARN |http-nio-8012-exec-3|http-nio-8012-exec-3|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:51.226|WARN |http-nio-8012-exec-6|http-nio-8012-exec-6|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:51.411|WARN |http-nio-8012-exec-5|http-nio-8012-exec-5|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:51.566|WARN |http-nio-8012-exec-7|http-nio-8012-exec-7|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:51.946|WARN |http-nio-8012-exec-8|http-nio-8012-exec-8|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:52.145|WARN |http-nio-8012-exec-9|http-nio-8012-exec-9|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:52.475|WARN |http-nio-8012-exec-10|http-nio-8012-exec-10|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:24:52.614|WARN |http-nio-8012-exec-1|http-nio-8012-exec-1|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 13:25:11.319|INFO |Apollo-Config-4|Apollo-Config-4|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|监听到了配置中心的变化==========================  change - ConfigChange{namespace='application', propertyName='zuul.routes.eureka-provider-demo-my.path', oldValue='/providerzzz/**', newValue='/provider/**', changeType=MODIFIED}
2020-07-10 13:25:57.597|INFO |Thread-440|Thread-440|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 13:25:57.597|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 13:25:57.598|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594358757597, current=DOWN, previous=UP]
2020-07-10 13:25:57.598|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 13:25:57.603|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 13:25:58.383|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 13:25:58.386|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 13:25:58.386|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 13:25:58.392|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 13:25:58.407|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 13:26:01.410|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 13:26:01.415|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 13:26:01.427|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-10 19:08:20.094|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider.initAppId() 85|App ID is set to zuul-config by app.id property from System Property
2020-07-10 19:08:20.106|INFO |main|main|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider.initEnvType() 130|Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2020-07-10 19:08:20.151|INFO |main|main|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress() 42|Located meta services from apollo.meta configuration: http://192.168.106.129:8080!
2020-07-10 19:08:20.157|INFO |main|main|com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress() 93|Located meta server address http://192.168.106.129:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-07-10 19:08:39.261|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-10 19:08:40.882|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-10 19:08:40.904|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-10 19:08:41.115|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=82ee090a-f1bb-33a0-bfcf-5c32d7e4d919
2020-07-10 19:08:41.937|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 8012 (http)
2020-07-10 19:08:41.949|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-8012"]
2020-07-10 19:08:41.950|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-10 19:08:41.950|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-10 19:08:42.165|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-10 19:08:42.165|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2880 ms
2020-07-10 19:08:42.329|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 19:08:42.330|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 19:08:42.343|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5ee6fdc4
2020-07-10 19:08:45.186|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-10 19:08:45.268|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-10 19:08:45.295|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-10 19:08:45.295|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-10 19:08:45.446|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-10 19:08:45.961|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-10 19:08:46.920|INFO |main|main|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized() 67|Starting filter initializer
2020-07-10 19:08:47.012|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-10 19:08:47.061|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-10 19:08:47.135|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-10 19:08:47.135|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-10 19:08:47.334|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-10 19:08:47.334|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-10 19:08:47.620|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-10 19:08:48.228|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-10 19:08:48.228|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-10 19:08:48.229|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-10 19:08:48.229|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-10 19:08:48.229|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-10 19:08:48.229|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-10 19:08:48.229|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-10 19:08:48.483|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-10 19:08:48.488|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-10 19:08:48.492|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-10 19:08:48.499|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594379328496 with initial instances count: 1
2020-07-10 19:08:48.503|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application GATEWAY-SERVER-MY with eureka with status UP
2020-07-10 19:08:48.504|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594379328504, current=UP, previous=STARTING]
2020-07-10 19:08:48.507|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 19:08:48.510|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-8012"]
2020-07-10 19:08:48.925|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 8012 (http) with context path ''
2020-07-10 19:08:48.926|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 8012
2020-07-10 19:08:48.965|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 19:08:49.892|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-10 19:08:49.902|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-10 19:08:49.942|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-10 19:08:49.975|INFO |main|main|com.adam.gateway_server.GatewayServerApplication.logStarted() 61|Started GatewayServerApplication in 33.55 seconds (JVM running for 37.486)
2020-07-10 19:08:51.362|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-10 19:08:51.362|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-10 19:08:51.374|INFO |RMI TCP Connection(15)-192.168.106.1|RMI TCP Connection(15)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 12 ms
2020-07-10 19:09:45.488|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 19:09:45.504|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 19:09:45.504|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-10 19:09:45.513|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-10 19:09:45.535|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 19:09:45.537|INFO |http-nio-8012-exec-1|http-nio-8012-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4d792408
2020-07-10 19:09:46.518|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-10 19:10:08.187|INFO |Apollo-Config-2|Apollo-Config-2|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|监听到了配置中心的变化==========================  change - ConfigChange{namespace='application', propertyName='zuul.routes.eureka-provider-demo-my.path', oldValue='/provider/**', newValue='/provider333/**', changeType=MODIFIED}
2020-07-10 19:10:28.458|WARN |http-nio-8012-exec-3|http-nio-8012-exec-3|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:32.557|WARN |http-nio-8012-exec-4|http-nio-8012-exec-4|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:32.727|WARN |http-nio-8012-exec-5|http-nio-8012-exec-5|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:32.895|WARN |http-nio-8012-exec-6|http-nio-8012-exec-6|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:33.030|WARN |http-nio-8012-exec-7|http-nio-8012-exec-7|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:33.177|WARN |http-nio-8012-exec-8|http-nio-8012-exec-8|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:33.337|WARN |http-nio-8012-exec-9|http-nio-8012-exec-9|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:33.461|WARN |http-nio-8012-exec-10|http-nio-8012-exec-10|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:33.598|WARN |http-nio-8012-exec-1|http-nio-8012-exec-1|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:33.742|WARN |http-nio-8012-exec-2|http-nio-8012-exec-2|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:33.880|WARN |http-nio-8012-exec-3|http-nio-8012-exec-3|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:34.027|WARN |http-nio-8012-exec-4|http-nio-8012-exec-4|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:34.176|WARN |http-nio-8012-exec-5|http-nio-8012-exec-5|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:34.292|WARN |http-nio-8012-exec-6|http-nio-8012-exec-6|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:34.411|WARN |http-nio-8012-exec-7|http-nio-8012-exec-7|org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter.run() 189|No route found for uri: /provider/getUserInfo/222
2020-07-10 19:10:48.289|INFO |Apollo-Config-1|Apollo-Config-1|com.adam.gateway_server.config_apollo.ZuulProxyRefresher.onChange() 30|监听到了配置中心的变化==========================  change - ConfigChange{namespace='application', propertyName='zuul.routes.eureka-provider-demo-my.path', oldValue='/provider333/**', newValue='/provider/**', changeType=MODIFIED}
2020-07-10 19:11:08.927|INFO |Thread-471|Thread-471|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-10 19:11:08.927|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application GATEWAY-SERVER-MY with eureka with status DOWN
2020-07-10 19:11:08.927|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594379468927, current=DOWN, previous=UP]
2020-07-10 19:11:08.928|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080: registering service...
2020-07-10 19:11:08.933|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - registration status: 204
2020-07-10 19:11:09.601|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed() 79|Stopping filter initializer
2020-07-10 19:11:09.604|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-10 19:11:09.605|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-10 19:11:09.612|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 19:11:09.629|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-10 19:11:12.631|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-10 19:11:12.640|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_GATEWAY-SERVER-MY/gateway-server-my:8080 - deregister  status: 200
2020-07-10 19:11:12.656|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
